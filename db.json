{"meta":{"version":1,"warehouse":"5.0.1"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-butterfly/source/css/index.styl","path":"css/index.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/css/var.styl","path":"css/var.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/img/404.jpg","path":"img/404.jpg","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/js/tw_cn.js","path":"js/tw_cn.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/img/butterfly-icon.png","path":"img/butterfly-icon.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/img/error-page.png","path":"img/error-page.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/img/favicon.ico","path":"img/favicon.ico","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/img/friend_404.gif","path":"img/friend_404.gif","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/js/search/algolia.js","path":"js/search/algolia.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/js/search/local-search.js","path":"js/search/local-search.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/first-draft-blog.md","hash":"da201d89a9452c1b06ba01cc529ab8787182bdd4","modified":1734316265293},{"_id":"source/_posts/first-test-blog.md","hash":"996f0aff1fc53ed0985a606cd9fe6abe710ca548","modified":1734334196734},{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1734313779902},{"_id":"node_modules/hexo-theme-butterfly/LICENSE","hash":"1128f8f91104ba9ef98d37eea6523a888dcfa5de","modified":1734333696364},{"_id":"node_modules/hexo-theme-butterfly/README.md","hash":"310bf423097f1cefb6121ce3f115b2ef68aacc44","modified":1734333696468},{"_id":"node_modules/hexo-theme-butterfly/README_CN.md","hash":"6e79be6f188bd671eb6ef1084ea7dd757fa2b3e9","modified":1734333696466},{"_id":"node_modules/hexo-theme-butterfly/package.json","hash":"b3cf4b89826d6b6b1810c5498049d004c8de3ce9","modified":1734333696465},{"_id":"node_modules/hexo-theme-butterfly/_config.yml","hash":"30b0e274e266a2c4566bd5122681b41f7a7affea","modified":1734333696763},{"_id":"node_modules/hexo-theme-butterfly/.github/FUNDING.yml","hash":"da5e77f5e0cdb7e11b36546fb6796d10e3dfbe5d","modified":1734333696775},{"_id":"node_modules/hexo-theme-butterfly/plugins.yml","hash":"a244af3b578de079666bd87c3055917220e63c25","modified":1734333696780},{"_id":"node_modules/hexo-theme-butterfly/layout/archive.pug","hash":"bb32c9c476372de747dfa563b83f77d7a917a77d","modified":1734333696509},{"_id":"node_modules/hexo-theme-butterfly/layout/category.pug","hash":"bf07d9624ac7285214c7f1d505da3a813c164c8c","modified":1734333696542},{"_id":"node_modules/hexo-theme-butterfly/layout/post.pug","hash":"d000b6a16418c1d95d4ce49ff9346416bbb151d3","modified":1734333696626},{"_id":"node_modules/hexo-theme-butterfly/layout/tag.pug","hash":"98c0084a4c62415775ca9e261e3d4eeb7668f35b","modified":1734333696650},{"_id":"node_modules/hexo-theme-butterfly/layout/index.pug","hash":"6aba5fd01aba75fd38ef2e2c1d406d951b8c5560","modified":1734333696597},{"_id":"node_modules/hexo-theme-butterfly/layout/page.pug","hash":"a59b90dd3f845ef6bac18091c55e8e019f4fe7a3","modified":1734333696617},{"_id":"node_modules/hexo-theme-butterfly/languages/default.yml","hash":"f46a8e362641f7a7c432d68e3984e739d5fe6b44","modified":1734333696770},{"_id":"node_modules/hexo-theme-butterfly/languages/en.yml","hash":"f46a8e362641f7a7c432d68e3984e739d5fe6b44","modified":1734333696771},{"_id":"node_modules/hexo-theme-butterfly/languages/ko.yml","hash":"ca8d31350e60b5849bb609a4d33f90d3dd8905a2","modified":1734333696778},{"_id":"node_modules/hexo-theme-butterfly/languages/ja.yml","hash":"c978fbf9421af4d96978161cef828ea88ae06037","modified":1734333696776},{"_id":"node_modules/hexo-theme-butterfly/languages/zh-CN.yml","hash":"e91ac1a94e1fc84cd75bc6b0a8b7a62acfb2a516","modified":1734333696784},{"_id":"node_modules/hexo-theme-butterfly/.github/ISSUE_TEMPLATE/bug_report.yml","hash":"df07add8fca55a7a12173af53201d306000fd9e0","modified":1734333696765},{"_id":"node_modules/hexo-theme-butterfly/languages/zh-TW.yml","hash":"9fecee5467e9c5034515fea73f1901c3c67e8ef9","modified":1734333696787},{"_id":"node_modules/hexo-theme-butterfly/languages/zh-HK.yml","hash":"c3e863ad5b5aa618873ad4370cf0335a9cc67b39","modified":1734333696786},{"_id":"node_modules/hexo-theme-butterfly/.github/ISSUE_TEMPLATE/feature_request.yml","hash":"996640605ed1e8e35182f0fd9a60a88783b24b03","modified":1734333696772},{"_id":"node_modules/hexo-theme-butterfly/.github/workflows/publish.yml","hash":"05857c2f265246d8de00e31037f2720709540c09","modified":1734333696781},{"_id":"node_modules/hexo-theme-butterfly/.github/ISSUE_TEMPLATE/config.yml","hash":"7b4831ae8f8f8c55dd1b856781210c517c63e6dd","modified":1734333696767},{"_id":"node_modules/hexo-theme-butterfly/.github/workflows/stale.yml","hash":"ac62b989b5550c756e1986fcc68f243170705383","modified":1734333696783},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/additional-js.pug","hash":"cd2e0141d7bbd2bd348703ead52c8060904ab338","modified":1734333696498},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/footer.pug","hash":"78cd51877c72a66de13ad88af6687627d4743b03","modified":1734333696567},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/layout.pug","hash":"345cb07213cdf66cfef7d9699c60f5f3297e9585","modified":1734333696602},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head.pug","hash":"82548510310fb44587371fcc9afd7f0bbdb673b1","modified":1734333696578},{"_id":"node_modules/hexo-theme-butterfly/scripts/events/404.js","hash":"a196e0d2eb40d1643bcf53a467ad37104f877ca5","modified":1734333696387},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/pagination.pug","hash":"eb31f49a826c1f95890078745e55c9a2ccb319f9","modified":1734333696618},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/rightside.pug","hash":"7d3581a446285b0cd9362266d54b59fe8768af9e","modified":1734333696639},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/sidebar.pug","hash":"d4f3a798cdded0c0744efab3b1397b00cdb0c6e5","modified":1734333696642},{"_id":"node_modules/hexo-theme-butterfly/scripts/events/cdn.js","hash":"21fb5aabe043486d095c4c8cce361ed85ba88a26","modified":1734333696407},{"_id":"node_modules/hexo-theme-butterfly/scripts/common/postDesc.js","hash":"b69c137c06791db58e347474b88803e112d100dd","modified":1734333696446},{"_id":"node_modules/hexo-theme-butterfly/scripts/events/comment.js","hash":"0e59424100fc3138b9096b38a0a2384a6411f8d9","modified":1734333696411},{"_id":"node_modules/hexo-theme-butterfly/scripts/events/merge_config.js","hash":"072f042e069e7a0523fa439569c0c672f389b5c4","modified":1734333696436},{"_id":"node_modules/hexo-theme-butterfly/scripts/filters/post_lazyload.js","hash":"860f967ecf3c6a6ea785b560a7aae4d0757cd18a","modified":1734333696444},{"_id":"node_modules/hexo-theme-butterfly/scripts/events/stylus.js","hash":"1ac9527c510ca757724f15dec84b0ead032411b2","modified":1734333696454},{"_id":"node_modules/hexo-theme-butterfly/scripts/filters/random_cover.js","hash":"a8eef3f37428436554f58a2b6bac7c255fbdf38d","modified":1734333696447},{"_id":"node_modules/hexo-theme-butterfly/scripts/events/init.js","hash":"428b94c7b9e83f7ea36227dee66bfe3c23aee4a8","modified":1734333696418},{"_id":"node_modules/hexo-theme-butterfly/scripts/events/welcome.js","hash":"8ad9911b755cba13dde2cc055c3f857a6b0dd20e","modified":1734333696464},{"_id":"node_modules/hexo-theme-butterfly/scripts/helpers/aside_archives.js","hash":"24a88d138ccabf29698a6cfe399b2e10f126367f","modified":1734333696401},{"_id":"node_modules/hexo-theme-butterfly/source/css/index.styl","hash":"755490867fd8afe47d5cce24faea2ca172b0c4dd","modified":1734333696728},{"_id":"node_modules/hexo-theme-butterfly/source/css/var.styl","hash":"8cc7b245da61e35cfcc80cafb4e553b5fa968111","modified":1734333696759},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/button.js","hash":"132d1e7757d0dac42d6b0957a25484613d7ed873","modified":1734333696405},{"_id":"node_modules/hexo-theme-butterfly/scripts/helpers/getArchiveLength.js","hash":"1b37a484cbcc81f51953ea093644b70499c26314","modified":1734333696415},{"_id":"node_modules/hexo-theme-butterfly/scripts/helpers/inject_head_js.js","hash":"7397db8012c27a4a1da75dd659745676654a0c65","modified":1734333696420},{"_id":"node_modules/hexo-theme-butterfly/scripts/helpers/page.js","hash":"39325366b622cfd2089cb1c9344d89f2edd79816","modified":1734333696441},{"_id":"node_modules/hexo-theme-butterfly/scripts/helpers/aside_categories.js","hash":"5edf400514843e28b329c3fd3f12f66ed5faca66","modified":1734333696403},{"_id":"node_modules/hexo-theme-butterfly/scripts/helpers/related_post.js","hash":"9c2ee5868879529f7cef7d93edca5b755f45e7e9","modified":1734333696448},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/chartjs.js","hash":"a26402edc63cbe8faa6a99647f039ffd9616e1f6","modified":1734333696409},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/hide.js","hash":"365db87ddfc582bf8c15cb440c48bed95106e4b1","modified":1734333696417},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/flink.js","hash":"555f7e4a2a7d8c4420ca467e87625bf96db11a70","modified":1734333696412},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/gallery.js","hash":"e0abf9f0ec51a78258bbf0101632e7dd2c54db25","modified":1734333696414},{"_id":"node_modules/hexo-theme-butterfly/scripts/helpers/series.js","hash":"806e2e5843df23e7eb94709056676f5ce6bfefa7","modified":1734333696451},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/label.js","hash":"22bc3a24c3610b5a3c3a2043b7d10e26d00018b8","modified":1734333696422},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/inlineImg.js","hash":"512c68a22ae4a58d6a6b24b368a0c00c2ccb4fcb","modified":1734333696421},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/mermaid.js","hash":"5c2a07df5874b5377540884e4da14dd21489378f","modified":1734333696437},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/score.js","hash":"5cb273e95846874e3a58074074c501df23c5e912","modified":1734333696450},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/note.js","hash":"1acefc59ead75ebd8cafee36efc7da4fa426d088","modified":1734333696439},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/timeline.js","hash":"67c1aad5ddfe56deae672146c2774379aa65af95","modified":1734333696456},{"_id":"node_modules/hexo-theme-butterfly/source/js/main.js","hash":"9fb88eb196f9368768aaa554c679129e4969f069","modified":1734333696433},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/series.js","hash":"f4507d1527cc0d5fe9fdd89eb769e15814a18fec","modified":1734333696452},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/tabs.js","hash":"3a9a28f6833e9cea60761e52ab8990fcb597444f","modified":1734333696455},{"_id":"node_modules/hexo-theme-butterfly/source/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1734333696382},{"_id":"node_modules/hexo-theme-butterfly/source/img/favicon.ico","hash":"455ac256580bf31a45813dbbdb87219bfc8bfb04","modified":1734333696378},{"_id":"node_modules/hexo-theme-butterfly/source/img/error-page.png","hash":"d2519710498a871ca3e913c57e2ba20a805b6430","modified":1734333696490},{"_id":"node_modules/hexo-theme-butterfly/source/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1734333696375},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/Open_Graph.pug","hash":"2beb68bdd43b09a539c8f4ed0cb7c0838c03409a","modified":1734333696611},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/analytics.pug","hash":"e5a26d2e2ca789dffc6bd9cfc13ff9e530c9911c","modified":1734333696505},{"_id":"node_modules/hexo-theme-butterfly/source/js/utils.js","hash":"fd3c26366c78dd82bc87d4ddebe76c582122e1b7","modified":1734333696462},{"_id":"node_modules/hexo-theme-butterfly/source/js/tw_cn.js","hash":"7ef59df188ea523da89f4caf69c5c0f14e78da69","modified":1734333696459},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/config_site.pug","hash":"c681697eac3657c2c3e921c2774d67bb93d47331","modified":1734333696548},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/config.pug","hash":"fbe602e22ee4a60d711485ad925dfe06b92a4c76","modified":1734333696550},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/google_adsense.pug","hash":"95a37e92b39c44bcbea4be7e29ddb3921c5b8220","modified":1734333696577},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/preconnect.pug","hash":"5208fe1e75d97a05fd9bdd6cc53c59d8b741b94b","modified":1734333696628},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/pwa.pug","hash":"0e301fe266b3260257b5a619dc8eedf2c1955e7e","modified":1734333696631},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/site_verification.pug","hash":"e2e8d681f183f00ce5ee239c42d2e36b3744daad","modified":1734333696645},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/header/index.pug","hash":"f4f590102c1937d63da5edf35f2ff37f5932ccc1","modified":1734333696580},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/header/menu_item.pug","hash":"95316827e12ec1a2cee18b7d5f49971e9a88b138","modified":1734333696608},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/mixins/article-sort.pug","hash":"10aa44e0216dbde863e2bd41267b613dc220e517","modified":1734333696520},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/header/social.pug","hash":"b7608dca3d361001d661779fe8be03c370231c41","modified":1734333696646},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/header/post-info.pug","hash":"605809f97b2f0da0e2e84dd2365fc8ccee1de6bd","modified":1734333696625},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/header/nav.pug","hash":"cd507e58852dc59a72e624fc1b22dc9b138c2575","modified":1734333696610},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/mixins/indexPostUI.pug","hash":"77eca4f5dbf38c2c805b732ff8d7d9c1560b6f16","modified":1734333696598},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/page/categories.pug","hash":"5276a8d2835e05bd535fedc9f593a0ce8c3e8437","modified":1734333696541},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/loading/index.pug","hash":"8b12fa52bd522dded8b7f1ae3f580f339d75aecf","modified":1734333696582},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/loading/fullpage-loading.pug","hash":"55090eee8076af761be7741b4e330ceea07c27d7","modified":1734333696569},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/loading/pace.pug","hash":"38b85f46c8e1bcbc43d2a4875d94ea201518eeeb","modified":1734333696614},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/page/404.pug","hash":"ca9cc03a51561413728d7211f0a544654c5d4e36","modified":1734333696493},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/post/outdate-notice.pug","hash":"1661f8a53334789099efffa92246158cb3d933b3","modified":1734333696613},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/page/default-page.pug","hash":"4912beecdef7af33f0704ef4d6605e1ac69fbb11","modified":1734333696552},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/post/post-copyright.pug","hash":"2bef558fa87986805b3397319b4c088564ba7c44","modified":1734333696622},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/page/tags.pug","hash":"38c0781ac7544d2010d5bfe7ae521125f3672975","modified":1734333696652},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/page/flink.pug","hash":"a6c3a4a608f540d05105a7ae19e2f5719c2a3f71","modified":1734333696566},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/page/shuoshuo.pug","hash":"7e7cd9dfd832c8f3e829ad445eccf5cb5dc8ff18","modified":1734333696641},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/post/reward.pug","hash":"2dca79799c566ffa68b21ecefa9c63432b5088e1","modified":1734333696637},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/aplayer.pug","hash":"0595d60dbf701e2ffa92181923861b1457a02112","modified":1734333696507},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/pangu.pug","hash":"0c1affa498b28e79e5a465f3f8f18035993bcb88","modified":1734333696619},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/effect.pug","hash":"1d39670ee6225f85f5c53bf5c84f3fd6e19290e8","modified":1734333696562},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/pjax.pug","hash":"5c7605a0353ef2709f75bad27794f985c7c78907","modified":1734333696621},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/prismjs.pug","hash":"512111475060798925eb1a7bc7617c34b8bd32ab","modified":1734333696630},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/subtitle.pug","hash":"21d42f43f26a2075abf2e6d13d35fb1aaf53a8b4","modified":1734333696649},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_author.pug","hash":"4ae59a48f8984ce8316cfc82756180dc496774eb","modified":1734333696526},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_archives.pug","hash":"86897010fe71503e239887fd8f6a4f5851737be9","modified":1734333696525},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_ad.pug","hash":"60dc48a7b5d89c2a49123c3fc5893ab9c57dd225","modified":1734333696522},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/umami_analytics.pug","hash":"e2fa3804c0fef70bb6fa884f1055c978725ccef2","modified":1734333696660},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_announcement.pug","hash":"ae392459ad401a083ca51ee0b27526b3c1e1faed","modified":1734333696524},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_bottom_self.pug","hash":"13dc8ce922e2e2332fe6ad5856ebb5dbf9ea4444","modified":1734333696529},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_categories.pug","hash":"d1a416d0a8a7916d0b1a41d73adc66f8c811e493","modified":1734333696530},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_post_series.pug","hash":"bd5ad01277f8c6ddf8a3a29af1518e5fe6eed23f","modified":1734333696533},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_newest_comment.pug","hash":"ba95646b78688bcdcf77166407c4799e5e3c3e6d","modified":1734333696531},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_post_toc.pug","hash":"a658a274c5f7896ee5122725bee45548693bdd66","modified":1734333696534},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_recent_post.pug","hash":"e5aac7b28ed4123d75797263c64e74ac547945bc","modified":1734333696535},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_top_self.pug","hash":"ae67c6d4130a6c075058a9c1faea1648bcc6f83e","modified":1734333696538},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_webinfo.pug","hash":"5da5f11a0f7f0fc06732df412bb77a7dddc41429","modified":1734333696539},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/index.pug","hash":"66f7a8b0cebc05c575ec3cb70b08d6854029d87a","modified":1734333696596},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_tags.pug","hash":"eceb4420a64c720f0d2741e89d6229bbb3d87353","modified":1734333696536},{"_id":"node_modules/hexo-theme-butterfly/source/css/_global/function.styl","hash":"15f321aee7876f2366677914a7cd2ab8b071b162","modified":1734333696703},{"_id":"node_modules/hexo-theme-butterfly/source/css/_global/index.styl","hash":"506bbff9c954d5f92a6d97145be2d732571fae39","modified":1734333696719},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/chat.styl","hash":"1a864887fb1bc9d24caa6b8b63a9bfc251762ffd","modified":1734333696687},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/comments.styl","hash":"134811b2d696f9ed2c0cd578f3886f1c60770c0a","modified":1734333696689},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/highlight.styl","hash":"79e95511d8d51e8944092b9596994d9779c1f4e4","modified":1734333696714},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/aside.styl","hash":"3312e3bc1076ac8ba9dd902a671602c78a5e1479","modified":1734333696682},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/footer.styl","hash":"4382ecffdb778de9fa05edf24765b68ae6da1220","modified":1734333696700},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/head.styl","hash":"dbd4af28bbf2fe9a7d75a75fdf460dfb3317311a","modified":1734333696707},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/pagination.styl","hash":"316447b94933af2cc580cc9c2b8b42e3875b8c08","modified":1734333696738},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/post.styl","hash":"0ba6e4f5252d1a95e9dfa20b4a17207b6713947d","modified":1734333696740},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/theme.styl","hash":"4765d72ab300910437d64991d3f70a82b41d4e3a","modified":1734333696755},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/loading.styl","hash":"ac2aeee9926f75b2a0098efe1c114126987430f2","modified":1734333696734},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/relatedposts.styl","hash":"517361bf999e41fdea2c57e0af6e82d310f76edd","modified":1734333696744},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/reward.styl","hash":"0d0ef8a9260b494e50ef545e5f395d649418f0a9","modified":1734333696745},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/sidebar.styl","hash":"be7ee2c63cedbc6b7f03cb3993ec533d9ae9d8bb","modified":1734333696751},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/third-party.styl","hash":"a96513acd7f51ffa01531ef3a24fdf5391ae93ae","modified":1734333696756},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/rightside.styl","hash":"743f9dd5585ecac812f3aa908eede4093d84fbd7","modified":1734333696746},{"_id":"node_modules/hexo-theme-butterfly/source/css/_mode/darkmode.styl","hash":"11a0fde4e784b0af5bb813c9e9ca9e480e5db99a","modified":1734333696693},{"_id":"node_modules/hexo-theme-butterfly/source/css/_mode/readmode.styl","hash":"e2761a2515b34d2d41dea00551abc44d4ce72aeb","modified":1734333696742},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/404.styl","hash":"354902d03f13068cf8a3617fb0ea92669e6b2a86","modified":1734333696674},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/categories.styl","hash":"643ff8c79d033947da312b70847b1b45850d7b29","modified":1734333696686},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/archives.styl","hash":"c08432ecceaa187005c55144cf6f2b092ca50820","modified":1734333696679},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/common.styl","hash":"8aa755a3f588e6e598e4fb6510faa6e766d59a94","modified":1734333696690},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/flink.styl","hash":"b02e88bb5dafcef11be4669da6cd9cddbf9a852a","modified":1734333696699},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/homepage.styl","hash":"3fa5aa012c62da3b5220654426c0708cab24e9af","modified":1734333696716},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/tags.styl","hash":"e765323537d174c7dcb88614100ccdc3e2d020e1","modified":1734333696753},{"_id":"node_modules/hexo-theme-butterfly/source/css/_search/index.styl","hash":"e2046eed9503ac506d5ca120b60203dd2cd968af","modified":1734333696726},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/shuoshuo.styl","hash":"855af8f97daad51b0161d96d50abd71edec87142","modified":1734333696749},{"_id":"node_modules/hexo-theme-butterfly/source/css/_search/algolia.styl","hash":"44d6b9fa9f0cb9026722f7dda15368d41d3fed20","modified":1734333696677},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/button.styl","hash":"2c71b5bfb873d57eb6532144f66e86183dd0dcf6","modified":1734333696685},{"_id":"node_modules/hexo-theme-butterfly/source/css/_search/local-search.styl","hash":"1ce084ed240d0e998bcdf1416ada598637878398","modified":1734333696736},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/hexo.styl","hash":"d76c38adf1d9c1279ef4241835667789f5b736e0","modified":1734333696708},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/gallery.styl","hash":"5ded9ddc66777e93cc4f0e1e4349540c0249346d","modified":1734333696705},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/hide.styl","hash":"7e5ca6a899c66b26cebc027db530d54018e2c5c0","modified":1734333696711},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/inlineImg.styl","hash":"f7415acfee7adb5ba01fd278b1e16b636a6b20a1","modified":1734333696730},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/label.styl","hash":"4a651e47d658340443bb63b7d15a1e9e34f76aca","modified":1734333696731},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/series.styl","hash":"cf24d72ea16ef253a438efe95b9a0a8fdfbb6d01","modified":1734333696748},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/tabs.styl","hash":"e76655e699154c3d39043c1a5bb8400dc1658399","modified":1734333696752},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/note.styl","hash":"909bb5079b26b6ee68177919f522566503654058","modified":1734333696737},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/timeline.styl","hash":"62d03f6c429c2de256a204399610a041cab23b04","modified":1734333696757},{"_id":"node_modules/hexo-theme-butterfly/source/css/_third-party/normalize.min.css","hash":"2c18a1c9604af475b4749def8f1959df88d8b276","modified":1734333696368},{"_id":"node_modules/hexo-theme-butterfly/source/js/search/algolia.js","hash":"e5821f78381af9f0f646952a7dd118daab2a79a6","modified":1734333696397},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/abcjs/index.pug","hash":"cabb3a06f8ef297a1ea3d91ced8abeaa0831aa14","modified":1734333696583},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/artalk.pug","hash":"71af0b679e00290b0854384368b3c7e9b3e5f26a","modified":1734333696511},{"_id":"node_modules/hexo-theme-butterfly/source/js/search/local-search.js","hash":"4e11d033fb58563f5e1b497f1a6f1c62d3501ee6","modified":1734333696426},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/fb.pug","hash":"a35c21e9ec2bef465c945408da515bfb5d848d6d","modified":1734333696564},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/abcjs/abcjs.pug","hash":"cb77a73a2b47156d18afb9f2376b3d502d0d12d7","modified":1734333696496},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/disqus.pug","hash":"c5f7081ca29db8cc80f808dfc29e36d5fa22fd7e","modified":1734333696556},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/remark42.pug","hash":"001e8be47854b891efe04013c240c38fed4185eb","modified":1734333696632},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/twikoo.pug","hash":"007bb96fd84f38852b7ab5f761e6867b6058422f","modified":1734333696656},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/chat/chatra.pug","hash":"8b21906b1b3f3faa19bdc16f4167b0b5d487c9ac","modified":1734333696546},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/index.pug","hash":"b2d274db84ef22fbd6d5ea8f4404821898934209","modified":1734333696584},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/waline.pug","hash":"3a5ccfc69bd8ccb4b8f3ce3502023f7914f2a022","modified":1734333696667},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/valine.pug","hash":"5715fc2dc75808af0a434fe66b81d0f651d03ed3","modified":1734333696664},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/chat/crisp.pug","hash":"2c6eb1b0b3586ce6a92228f809be37642a2010b0","modified":1734333696551},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/artalk.pug","hash":"f71d8acf5b0f3ece91ae1e018962c73b50941a45","modified":1734333696516},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/chat/index.pug","hash":"5aaef147ae31e1ffc49152acd43dabc5f15b39ba","modified":1734333696585},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/chat/tidio.pug","hash":"9ed621742714de6de6593490e3d4aaa3f30a4791","modified":1734333696653},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/disqus.pug","hash":"be40f20273c31e8b37353d9705ad9b9c693e16a2","modified":1734333696558},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/facebook_comments.pug","hash":"d040c00332e83c985dbc0e76e3242336edbcd764","modified":1734333696563},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/disqusjs.pug","hash":"8f3d4c33ec3d1be4bd203ba2461db9ccfad63f23","modified":1734333696559},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/giscus.pug","hash":"966ef931a9545cdde8c270322e8650b54b965935","modified":1734333696571},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/gitalk.pug","hash":"dd5c7e808654aefeb3fcc81c7b0911cff1ee8776","modified":1734333696573},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/index.pug","hash":"a9709905593d960954e2dd572f09f48a6c2b1ef7","modified":1734333696587},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/livere.pug","hash":"6ddd9dce1a553a0d24509d7f9c78b9f6742be030","modified":1734333696603},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/remark42.pug","hash":"830bafcf50180fed4fcf76f0da277d702e66a5b3","modified":1734333696634},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/js.pug","hash":"00ed91c52939b9675b316137f854d13684c895a6","modified":1734333696599},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/twikoo.pug","hash":"8869bac6ec822a70dfe432d7bd5e599750441ddb","modified":1734333696658},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/waline.pug","hash":"bfc6e6690e70c5bd646bdff354b750ebd782f4ad","modified":1734333696669},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/utterances.pug","hash":"46c177643a8e65f036cb08c29387d4ab29485859","modified":1734333696662},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/valine.pug","hash":"5227663ccbe86c830447e4dcc594202b1582595d","modified":1734333696665},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/math/chartjs.pug","hash":"a3f409a0c1ed3df8c920f7d32b86c3832459f3bf","modified":1734333696544},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/math/index.pug","hash":"bd87dc207f1cab66e48496548b18f0dd9021eb91","modified":1734333696588},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/artalk.pug","hash":"86cf7ba9cae6eb8bee0ca792df7a82f58c8451ff","modified":1734333696518},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/math/mermaid.pug","hash":"2e82651607326e7f999fc7891480c74a06cbb416","modified":1734333696609},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/math/katex.pug","hash":"1c2190c9bac26992de8d52be4f8522309d566750","modified":1734333696601},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/math/mathjax.pug","hash":"49aece5be2a0a8e414257ecbfc2abd7d0d5f8c64","modified":1734333696606},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/common.pug","hash":"7e3b4e1124c9917b820e96bd0c915c08da68aecd","modified":1734333696547},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/disqus-comment.pug","hash":"619c41729691a54871b49da54ea27657d1b58e7e","modified":1734333696554},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/github-issues.pug","hash":"b82c936cb73c325fcac69832a3e475ed732e06f9","modified":1734333696575},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/remark42.pug","hash":"eee2c6b5c73ea280c7b683a1d117cab5a2ea5f66","modified":1734333696636},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/index.pug","hash":"4ec0642f2d5444acfab570a6f8c7868e7ff43fde","modified":1734333696590},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/share/addtoany.pug","hash":"85c92f8a7e44d7cd1c86f089a05be438535e5362","modified":1734333696500},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/share/share-js.pug","hash":"393c94702fd65c585e37bcf9a4f33c638d8bac72","modified":1734333696640},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/twikoo-comment.pug","hash":"16796729df739a47508999b5467a57037ee6e9df","modified":1734333696654},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/waline.pug","hash":"393a327a7f41de070abd53cd95149d3e7e1bbf61","modified":1734333696670},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/share/index.pug","hash":"8a7d5cdca6a87897d435fc88ebcb7ec0b7ec8591","modified":1734333696594},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/valine.pug","hash":"988f75833dcb18d4a02c34cdea51e39434ea5723","modified":1734333696666},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/search/algolia.pug","hash":"9c3c109a12d2b6916e8b4965cca12f521510ead9","modified":1734333696503},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/search/docsearch.pug","hash":"18b492731f67d449bb32d7fac321deb57a92e75f","modified":1734333696560},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/search/index.pug","hash":"11a4e7decb634fbd6af454aa5ec230945837b6a9","modified":1734333696592},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/prismjs/diff.styl","hash":"dcd3af96d8be1a6358a88daf2c66165cc9b792d9","modified":1734333696698},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/search/local-search.pug","hash":"f11c6db285f57a475db638e74920efb2d0e5a4d0","modified":1734333696604},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/highlight/index.styl","hash":"cc272f7d612a52f4f1d2a95456cc89bc709fe0e5","modified":1734333696722},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/highlight/diff.styl","hash":"fdcc5a88505fcbf0593aa04ecb4ac0c8ad4f8fa3","modified":1734333696695},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/prismjs/index.styl","hash":"1997713a8722391c8b5c8c1598ec19adee993fa5","modified":1734333696724},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/prismjs/line-number.styl","hash":"ed77729c26cf815c75efd3a6889b6ac805471765","modified":1734333696733},{"_id":"node_modules/hexo-theme-butterfly/source/img/butterfly-icon.png","hash":"f5dd732fed5c3bcd4aa76bac3441bac8485fb432","modified":1734333696485},{"_id":"public/2024/12/16/first-draft-blog/index.html","hash":"2032924eba2cb044fef25da65532325a340f0a8f","modified":1734338646349},{"_id":"public/archives/index.html","hash":"e968227229a0b45e31b9ac0edf7ceec887b44cd2","modified":1734338646349},{"_id":"public/archives/2023/index.html","hash":"89075136e91f6c7e2b6377f3ec9aa95ed8a16ad6","modified":1734338646349},{"_id":"public/archives/2023/10/index.html","hash":"e3719e82db5dd9957b9ecb3fc219e1d026bca8dc","modified":1734338646349},{"_id":"public/archives/2024/index.html","hash":"0592c370b9573a4439e582916ec18e2815b50ece","modified":1734338646349},{"_id":"public/archives/2024/12/index.html","hash":"3d076128830abb03886002af680cfba2247ac5de","modified":1734338646349},{"_id":"public/categories/我的前端路线/index.html","hash":"1af8b33532945ec9ace6caddd881a2f78fe039f3","modified":1734338646349},{"_id":"public/2024/12/16/hello-world/index.html","hash":"61b5e83fdc44e2eb6d08b6c04e309fdb276db319","modified":1734338646349},{"_id":"public/2023/10/06/first-test-blog/index.html","hash":"73148f5cbb30f69c89916ffe9397c65c3cc2dc93","modified":1734338646349},{"_id":"public/tags/mobx/index.html","hash":"118b0ef01bae6f5d11308e2a6f145bd1bf6df747","modified":1734338646349},{"_id":"public/index.html","hash":"59c85aefac3a372a3f5bb5be89c60d29323e9e2f","modified":1734338646349},{"_id":"public/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1734338646349},{"_id":"public/img/favicon.ico","hash":"455ac256580bf31a45813dbbdb87219bfc8bfb04","modified":1734338646349},{"_id":"public/img/error-page.png","hash":"d2519710498a871ca3e913c57e2ba20a805b6430","modified":1734338646349},{"_id":"public/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1734338646349},{"_id":"public/css/var.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1734338646349},{"_id":"public/js/utils.js","hash":"fd3c26366c78dd82bc87d4ddebe76c582122e1b7","modified":1734338646349},{"_id":"public/js/search/local-search.js","hash":"4e11d033fb58563f5e1b497f1a6f1c62d3501ee6","modified":1734338646349},{"_id":"public/js/search/algolia.js","hash":"e5821f78381af9f0f646952a7dd118daab2a79a6","modified":1734338646349},{"_id":"public/css/index.css","hash":"8496d0e05aa1ecc63566092b68c764c87dc2dbec","modified":1734338646349},{"_id":"public/js/main.js","hash":"9fb88eb196f9368768aaa554c679129e4969f069","modified":1734338646349},{"_id":"public/js/tw_cn.js","hash":"7ef59df188ea523da89f4caf69c5c0f14e78da69","modified":1734338646349},{"_id":"public/img/butterfly-icon.png","hash":"f5dd732fed5c3bcd4aa76bac3441bac8485fb432","modified":1734338646349}],"Category":[{"name":"我的前端路线","_id":"cm4qsfufb0003pou21dvd9j7m"}],"Data":[],"Page":[],"Post":[{"title":"first_draft_blog","date":"2024-12-16T02:07:17.000Z","_content":"\n\n# draft111","source":"_posts/first-draft-blog.md","raw":"---\ntitle: first_draft_blog\ndate: 2024-12-16 10:07:17\ntags:\n---\n\n\n# draft111","slug":"first-draft-blog","published":1,"updated":"2024-12-16T02:31:05.293Z","comments":1,"layout":"post","photos":[],"_id":"cm4qsfuey0000pou2eewcgv89","content":"<h1 id=\"draft111\"><a href=\"#draft111\" class=\"headerlink\" title=\"draft111\"></a>draft111</h1>","cover":false,"excerpt":"","more":"<h1 id=\"draft111\"><a href=\"#draft111\" class=\"headerlink\" title=\"draft111\"></a>draft111</h1>"},{"title":"mobx","date":"2023-10-06T10:30:00.000Z","publish":true,"toc":true,"_content":"\n\n## observable和autorun(mobx@5)\n\n监听基本数据类型\n\n```js\nimport { observable, autorun } from \"mobx\";\n\nconst observableNumber = observable.box(10)\nconst observableName = observable.box('zzf')\n\n// 自动监听基本数据类型observableNumber变化\n// auto首先默认会自动执行一次\nautorun(() => {\n  console.log(observableNumber.get())\n})\nsetTimeout(() => {\n  observableNumber.set(20)\n}, 1000);\n\n// 监听基本数据类型observableName变化,两个监听互不干扰\n// 需要用到什么就监听什么数据\nautorun(() => {\n  console.log(observableName.get())\n})\nsetTimeout(() => {\n  observableName.set('zzz')\n}, 2000);\n\nfunction App() {\n  return (\n    <div className=\"App\">App</div>\n  );\n}\n\nexport default App;\n```\n\n监听复杂数据类型的两种写法\n\n```js\nimport { observable, autorun } from \"mobx\";\n\n// 1. 监听复杂数据类型的map写法\nconst observableObj = observable.map({\n  name: 'zzf',\n  age: 10\n})\n// 粒度化监听，以下只有当observableObj的name属性值改变时才会触发\nautorun(() => {\n  console.log(observableObj.get('name'))\n})\nsetTimeout(() => {\n  observableObj.set('name', 'zzz')\n}, 1000);\n\n// 2.监听复杂数据类型的简便写法\nconst observableObj = observable({\n  name: 'zzf',\n  age: 10\n})\n// 粒度化监听，以下只有当observableObj的name属性值改变时才会触发\nautorun(() => {\n  console.log(observableObj.name)\n})\nsetTimeout(() => {\n  observableObj.name = 'zzz'\n}, 1000);\n\nfunction App() {\n  return (\n    <div className=\"App\">App</div>\n  );\n}\n\nexport default App;\n```\n\n## 项目中使用mobx示例(observable+autorun)\n\n/mobx/index.js\n\n```js\nimport { observable } from \"mobx\";\n\nconst store = observable({\n  showTabbar: true,\n  userName: 'zzf',\n  token: 'zzzzdserw'\n})\n\nexport default store\n```\n\n修改\n\n```js\nimport store from './mobx'\n\nstore.showTabbar = false\n```\n\n监听\n\n```js\nimport { observable, autorun } from \"mobx\";\nimport store from \"./mobx\";\n\nfunction App() {\n  autorun(() => {\n    console.log(store.showTabbar)\n  })\n  \n  return (\n    <div className=\"App\">App</div>\n  );\n}\n\nexport default App;\n```\n\n## 配置configure严格模式\n\n以上通过**store.showTabbar = false来修改store的数据太过随便，不利于后续代码维护调试**，**通过configure配置严格模式，定义相应的action方法来修改store中的数据才更加安全**\n\n/mobx/index.js\n\n```js\nimport { observable, configure, action } from \"mobx\";\nconfigure({\n  // 非严格模式\n  // enforceActions: 'never'\n  // 严格模式，不允许在此文件外直接修改store的数据\n  enforceActions: 'always'\n})\n\nconst store = observable({\n  showTabbar: true,\n  userName: 'zzf',\n  token: 'zzzzdserw',\n\n  changeTabShow() {\n    this.showTabbar = true\n  },\n  changeTabHide() {\n    this.showTabbar = false\n  }\n}, {\n  // 标记changeTabShow，changeTabHide两个方法是action,专门用于修改showTabbar的值\n  changeTabShow: action,\n  changeTabHide: action\n})\n\nexport default store\n```\n\n修改\n\n```js\nimport store from 'mobx'\n\nstore.changeTabShow()\nstore.changeTabHide()\n```\n\n## class类+装饰器写法(@observable @action)\n\n/mobx/index.js\n\n```js\nimport { observable, configure, action } from \"mobx\";\nconfigure({\n  // 非严格模式\n  // enforceActions: 'never'\n  // 严格模式，不允许在此文件外直接修改store的数据\n  enforceActions: 'always'\n})\n\n// const store = observable({\n//   showTabbar: true,\n//   userName: 'zzf',\n//   token: 'zzzzdserw',\n\n//   changeTabShow() {\n//     this.showTabbar = true\n//   },\n//   changeTabHide() {\n//     this.showTabbar = false\n//   }\n// }, {\n//   // 标记changeTabShow，changeTabHide两个方法是action,专门用于修改showTabbar的值\n//   changeTabShow: action,\n//   changeTabHide: action\n// })\n\n// 类加装饰器写法\nclass Store {\n  @observable showTabbar = true\n  @observable userName = 'zzf'\n  @observable token = 'zzzzdserw'\n\n  @action changeTabShow() {\n    this.showTabbar = true\n  }\n  @action changeTabHide() {\n    this.showTabbar = false\n  }\n}\nconst store = new Store()\n\nexport default store\n```\n\n装饰器语法报错解决\n\n1. 让编辑器支持装饰器语法 (vscode设置搜experimentalDecorators进行勾选)\n\n![pPX7Hyt.png](https://z1.ax1x.com/2023/10/06/pPX7Hyt.png)\n\n2. 代码支持装饰器语法\n\n   2.1\n\n   ```bash\n   npm install @babel/core @babel/plugin-proposal-decorators @babel/preset-env\n   ```\n\n   2.2 创建.babelrc\n\n   ```\n   {\n     \"presets\": [\n       \"@babel/preset-env\"\n     ],\n     \"plugins\": [\n       [\n         \"@babel/plugin-proposal-decorators\",\n         {\n           \"legacy\": true\n         }\n       ]\n     ]\n   }\n   ```\n\n   2.3 创建config-overrides.js\n\n   ```js\n   const path = require('path')\n   const { override, addDecoratorsLegacy } = require('customize-cra')\n    \n   function resolve(dir) {\n       return path.join(__dirname, dir)\n   }\n    \n   const customize = () => (config, env) => {\n       config.resolve.alias['@'] = resolve('src')\n       if (env === 'production') {\n           config.externals = {\n               'react': 'React',\n               'react-dom': 'ReactDOM'\n           }\n       }\n    \n       return config\n   };\n   module.exports = override(addDecoratorsLegacy(), customize())\n   ```\n\n   2.4 安装依赖\n\n   ```bash\n   npm install customize-cra react-app-rewired\n   ```\n\n   2.5 修改package.json\n\n   ```json\n   ...\n   \"scripts\": {\n     \"start\": \"react-app-rewired start\",\n     \"build\": \"react-app-rewired build\",\n     \"test\": \"react-app-rewired test\",\n     \"eject\": \"react-app-rewired eject\"\n   }\n   ...\n   ```\n\n   2.6还有**报错就重新用vscode打开项目重跑**\n\n   ​\n\n## 异步action的处理\n\n```js\nimport { observable, configure, action, runInAction } from \"mobx\";\nconfigure({\n  // 非严格模式\n  // enforceActions: 'never'\n  // 严格模式，不允许在此文件外直接修改store的数据\n  enforceActions: 'always'\n})\n\n// 类加装饰器写法\nimport axios from 'axios'\n\nclass Store {\n  @observable list = []\n  \n  @action async getList() {\n    // 1.\n    axios.get('http://xxxx').then((res) => {\n      // 下面直接给this.list赋值会被认为是在aaction外部修改，出现报错\n      // this.list = res.data.list\n      // 使用runInAction表示还是在action内部进行的list的修改\n      runInAction(() => {\n        this.list = res.data.list\n      })\n    })\n    // 2.async+await方式\n    const res = await axios.get('http://xxxx')\n    runInAction(() => {\n      this.list = res.data.list\n    })\n  }\n}\nconst store = new Store()\n\nexport default store\n```\n\n## autorun的订阅与取消\n\n```js\nimport { observable, autorun } from \"mobx\";\nimport store from \"./mobx\";\nimport { useEffect } from \"react\";\n\nfunction App() {\n  useEffect(() => {\n    // autorun执行会返回一个取消订阅函数，一般都要在销毁流程中执行取消订阅\n    const unsubscribe = autorun(() => {\n      console.log(store.list)\n    })\n    return () => {\n      unsubscribe()\n    }\n  }, []);\n\n  return (\n    <div className=\"App\">App</div>\n  );\n}\n\nexport default App;\n```\n\n## mobx-react的使用(mobx-react@5)\n\n```bash\nnpm install mobx-react@5\n```\n\n/src/index.js\n\n```js\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\n// 通过高阶组件的方式注入，子组件通过props获取store的数据\nimport { Provider } from 'mobx-react';\nimport store from './mobx';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n);\n```\n### 类组件中使用mobx-react\n\n![pPXLWjA.png](https://z1.ax1x.com/2023/10/06/pPXLWjA.png)\n\n/src/App.js\n\n```js\nimport React, { Component } from 'react'\nimport { inject, observer } from 'mobx-react'\n\n// 通过inject修饰器注入指定接收的store\n@inject('store')\n@observer // 使用observer构建当前组件的父组件\nclass App extends Component {\n  componentDidMount() {\n    console.log(this.props.store.list, this.props.store.showTabbar)\n  }\n\n  render() {\n    return (\n      <div>\n        App\n      </div>\n    )\n  }\n}\n\nexport default App;\n```\n\n### 函数式组件中使用mobx-react\n\n函数式组件中使用方式1\n\n```js\nimport React from 'react';\nimport { Observer } from 'mobx-react';\n// 手动引入store\nimport store from \"./mobx\";\n\nfunction App() {\n  return (\n    <div>\n      App\n      {/* 使用Observer嵌套，返回回调函数的写法 */}\n      {/* 简化了原来通过autorun手动监听和移除的方式 */}\n      <Observer>\n        {\n          () => {\n            return store.list.map((item) => {\n              return <div>{item}</div>\n            })\n          }\n        }\n      </Observer>\n    </div>\n  )\n}\n\nexport default App\n```\n\n函数式组件中使用方式2\n\n```js\nimport React from 'react';\nimport { inject, observer } from 'mobx-react';\n\nfunction App(props) {\n  return (\n    <div>\n      {\n        props.store.list.map((item) => {\n          return <div>{item}</div>\n        })\n      }\n    </div>\n  )\n}\n\nexport default inject('store')(observer(App))\n```\n\n### inject使用\n\n```jsx\n// 顶层节点\nimport Dict from '@/mobx/dict';\nimport { Provider } from 'mobx-react'\n\n// 先使用高阶组件进行Provide\nconst App = () => {\n  return <Provider Dict={Dict}>\n    <Router></Router>\n  </Provider>\n}\n\n// 使用inject对需要的组件进行注入使用\nconst indexView = (props) => {\n  const { Dict } = props\n}\nexport default inject('Dict')(memo(observer(indexView)))\n```\n\n### inject引入多个mobx\n\n**ProviderCom高阶组件**（高阶组件引入后，其子集组件一样进行inject使用）\n\n```jsx\nimport React, { FC } from 'react'\nimport { Provider } from 'mobx-react'\n\n/**\n * @description Provider 高价组件\n *\n * @param Child 需要包裹的组件\n * @param mobx mobx 实例对象，或者实例对象组成的数组\n */\n// ProviderCom 高阶组件\nexport default function ProviderCom(\n\tChild: any,\n\tmobx: any\n) {\n\treturn (props: any) => {\n\t\treturn (\n\t\t\t<Provider {...mobx}>\n\t\t\t\t<Child {...props} />\n\t\t\t</Provider>\n\t\t)\n\t}\n}\n```\n\n**结合ProvideCom注入引用多个mobx**\n\n```jsx\nimport { inject, observer } from 'mobx-react';\n\nconst StandardExamModal = (props) => {\n  const {\n    ModalMobx,\n    Dict\n  } = props\n}\n\n// 注意写法\nexport default ProviderCom(inject('ModalMobx', 'Dict')(observer(StandardExamModal)), { ModalMobx, Dict })\n```\n\n## mobx6\n\n### 添加观测的几种方式\n\n### makeAutoObservable观测\n\n```js\nimport axios from \"axios\"\nimport { makeAutoObservable, runInAction } from \"mobx\"\n\n// 1.对应用状态进行建模。\n// calss也可直接导出作为timer实例的类型来使用!!!\nexport class Timer {\n  secondsPassed = 0\n\n  constructor() {\n    // 2.开启观测\n    makeAutoObservable(this)\n  }\n\n  increase() {\n    this.secondsPassed += 1\n  }\n\n  reset() {\n    this.secondsPassed = 0\n  }\n\n  // 异步\n  async decrement() {\n    // 1.\n    axios.get('xxx').then((res) => {\n      runInAction(() => {\n        this.secondsPassed -= res\n      })\n    })\n\n    // 2.\n    const res = await new Promise((resolve, reject) => {\n      setTimeout(() => {\n        // 减的数为10\n        resolve(10)\n      }, 1000);\n    })\n    // 直接这样会报警告\n    // this.secondsPassed -= res\n    runInAction(() => {\n      this.secondsPassed -= res\n    })\n  }\n}\n\nexport default new Timer()\n```\n\n### observer()使用-熟悉传值props法\n\n```js\n// 使用\n// 2.构建一个使用 observable 状态的“用户界面”。\nimport { observer } from \"mobx-react\";\nimport { myTimer，Timer } from './Timer'\n\nconst TimerView = memo(observer(({ timer }: { timer: Timer }) => (\n  <>\n    <div>当前秒数：{timer.secondsPassed}</div>\n    <button onClick={() => timer.reset()}>重置</button>\n  </>\n)))\n\nexport default TimerView\n\n// 1.添加\nReactDOM.render(<TimerView timer={myTimer} />, document.body)\n```\n\n### useLocalObservable实例使用法\n\n```js\nimport { observer, useLocalObservable } from \"mobx-react\";\n// 1.直接引入实例\nimport TimeMobx from './Timer';\n\nconst TimerView = observer(() => {\n  // 2.useLocalObservable直接使用mobx类导出的实例\n  const timeStore = useLocalObservable(() => TimeMobx)\n\n  return (<>\n    <div>当前秒数：{timeStore.secondsPassed}</div>\n    <button onClick={() => timeStore.reset()}>重置</button>\n  </>)\n})\n\nexport default TimerView\n```\n\n\n\n","source":"_posts/first-test-blog.md","raw":"---\ntitle: 'mobx'\ndate: 2023-10-06 18:30:00\n# permalink: '/mobx'\n# isTimeLine: true\n# sidebar: auto\n# sidebarDepth: 1\ncategories:\n - [我的前端路线]\ntags:\n - mobx\n# isShowComments: false\npublish: true\ntoc: true\n---\n\n\n## observable和autorun(mobx@5)\n\n监听基本数据类型\n\n```js\nimport { observable, autorun } from \"mobx\";\n\nconst observableNumber = observable.box(10)\nconst observableName = observable.box('zzf')\n\n// 自动监听基本数据类型observableNumber变化\n// auto首先默认会自动执行一次\nautorun(() => {\n  console.log(observableNumber.get())\n})\nsetTimeout(() => {\n  observableNumber.set(20)\n}, 1000);\n\n// 监听基本数据类型observableName变化,两个监听互不干扰\n// 需要用到什么就监听什么数据\nautorun(() => {\n  console.log(observableName.get())\n})\nsetTimeout(() => {\n  observableName.set('zzz')\n}, 2000);\n\nfunction App() {\n  return (\n    <div className=\"App\">App</div>\n  );\n}\n\nexport default App;\n```\n\n监听复杂数据类型的两种写法\n\n```js\nimport { observable, autorun } from \"mobx\";\n\n// 1. 监听复杂数据类型的map写法\nconst observableObj = observable.map({\n  name: 'zzf',\n  age: 10\n})\n// 粒度化监听，以下只有当observableObj的name属性值改变时才会触发\nautorun(() => {\n  console.log(observableObj.get('name'))\n})\nsetTimeout(() => {\n  observableObj.set('name', 'zzz')\n}, 1000);\n\n// 2.监听复杂数据类型的简便写法\nconst observableObj = observable({\n  name: 'zzf',\n  age: 10\n})\n// 粒度化监听，以下只有当observableObj的name属性值改变时才会触发\nautorun(() => {\n  console.log(observableObj.name)\n})\nsetTimeout(() => {\n  observableObj.name = 'zzz'\n}, 1000);\n\nfunction App() {\n  return (\n    <div className=\"App\">App</div>\n  );\n}\n\nexport default App;\n```\n\n## 项目中使用mobx示例(observable+autorun)\n\n/mobx/index.js\n\n```js\nimport { observable } from \"mobx\";\n\nconst store = observable({\n  showTabbar: true,\n  userName: 'zzf',\n  token: 'zzzzdserw'\n})\n\nexport default store\n```\n\n修改\n\n```js\nimport store from './mobx'\n\nstore.showTabbar = false\n```\n\n监听\n\n```js\nimport { observable, autorun } from \"mobx\";\nimport store from \"./mobx\";\n\nfunction App() {\n  autorun(() => {\n    console.log(store.showTabbar)\n  })\n  \n  return (\n    <div className=\"App\">App</div>\n  );\n}\n\nexport default App;\n```\n\n## 配置configure严格模式\n\n以上通过**store.showTabbar = false来修改store的数据太过随便，不利于后续代码维护调试**，**通过configure配置严格模式，定义相应的action方法来修改store中的数据才更加安全**\n\n/mobx/index.js\n\n```js\nimport { observable, configure, action } from \"mobx\";\nconfigure({\n  // 非严格模式\n  // enforceActions: 'never'\n  // 严格模式，不允许在此文件外直接修改store的数据\n  enforceActions: 'always'\n})\n\nconst store = observable({\n  showTabbar: true,\n  userName: 'zzf',\n  token: 'zzzzdserw',\n\n  changeTabShow() {\n    this.showTabbar = true\n  },\n  changeTabHide() {\n    this.showTabbar = false\n  }\n}, {\n  // 标记changeTabShow，changeTabHide两个方法是action,专门用于修改showTabbar的值\n  changeTabShow: action,\n  changeTabHide: action\n})\n\nexport default store\n```\n\n修改\n\n```js\nimport store from 'mobx'\n\nstore.changeTabShow()\nstore.changeTabHide()\n```\n\n## class类+装饰器写法(@observable @action)\n\n/mobx/index.js\n\n```js\nimport { observable, configure, action } from \"mobx\";\nconfigure({\n  // 非严格模式\n  // enforceActions: 'never'\n  // 严格模式，不允许在此文件外直接修改store的数据\n  enforceActions: 'always'\n})\n\n// const store = observable({\n//   showTabbar: true,\n//   userName: 'zzf',\n//   token: 'zzzzdserw',\n\n//   changeTabShow() {\n//     this.showTabbar = true\n//   },\n//   changeTabHide() {\n//     this.showTabbar = false\n//   }\n// }, {\n//   // 标记changeTabShow，changeTabHide两个方法是action,专门用于修改showTabbar的值\n//   changeTabShow: action,\n//   changeTabHide: action\n// })\n\n// 类加装饰器写法\nclass Store {\n  @observable showTabbar = true\n  @observable userName = 'zzf'\n  @observable token = 'zzzzdserw'\n\n  @action changeTabShow() {\n    this.showTabbar = true\n  }\n  @action changeTabHide() {\n    this.showTabbar = false\n  }\n}\nconst store = new Store()\n\nexport default store\n```\n\n装饰器语法报错解决\n\n1. 让编辑器支持装饰器语法 (vscode设置搜experimentalDecorators进行勾选)\n\n![pPX7Hyt.png](https://z1.ax1x.com/2023/10/06/pPX7Hyt.png)\n\n2. 代码支持装饰器语法\n\n   2.1\n\n   ```bash\n   npm install @babel/core @babel/plugin-proposal-decorators @babel/preset-env\n   ```\n\n   2.2 创建.babelrc\n\n   ```\n   {\n     \"presets\": [\n       \"@babel/preset-env\"\n     ],\n     \"plugins\": [\n       [\n         \"@babel/plugin-proposal-decorators\",\n         {\n           \"legacy\": true\n         }\n       ]\n     ]\n   }\n   ```\n\n   2.3 创建config-overrides.js\n\n   ```js\n   const path = require('path')\n   const { override, addDecoratorsLegacy } = require('customize-cra')\n    \n   function resolve(dir) {\n       return path.join(__dirname, dir)\n   }\n    \n   const customize = () => (config, env) => {\n       config.resolve.alias['@'] = resolve('src')\n       if (env === 'production') {\n           config.externals = {\n               'react': 'React',\n               'react-dom': 'ReactDOM'\n           }\n       }\n    \n       return config\n   };\n   module.exports = override(addDecoratorsLegacy(), customize())\n   ```\n\n   2.4 安装依赖\n\n   ```bash\n   npm install customize-cra react-app-rewired\n   ```\n\n   2.5 修改package.json\n\n   ```json\n   ...\n   \"scripts\": {\n     \"start\": \"react-app-rewired start\",\n     \"build\": \"react-app-rewired build\",\n     \"test\": \"react-app-rewired test\",\n     \"eject\": \"react-app-rewired eject\"\n   }\n   ...\n   ```\n\n   2.6还有**报错就重新用vscode打开项目重跑**\n\n   ​\n\n## 异步action的处理\n\n```js\nimport { observable, configure, action, runInAction } from \"mobx\";\nconfigure({\n  // 非严格模式\n  // enforceActions: 'never'\n  // 严格模式，不允许在此文件外直接修改store的数据\n  enforceActions: 'always'\n})\n\n// 类加装饰器写法\nimport axios from 'axios'\n\nclass Store {\n  @observable list = []\n  \n  @action async getList() {\n    // 1.\n    axios.get('http://xxxx').then((res) => {\n      // 下面直接给this.list赋值会被认为是在aaction外部修改，出现报错\n      // this.list = res.data.list\n      // 使用runInAction表示还是在action内部进行的list的修改\n      runInAction(() => {\n        this.list = res.data.list\n      })\n    })\n    // 2.async+await方式\n    const res = await axios.get('http://xxxx')\n    runInAction(() => {\n      this.list = res.data.list\n    })\n  }\n}\nconst store = new Store()\n\nexport default store\n```\n\n## autorun的订阅与取消\n\n```js\nimport { observable, autorun } from \"mobx\";\nimport store from \"./mobx\";\nimport { useEffect } from \"react\";\n\nfunction App() {\n  useEffect(() => {\n    // autorun执行会返回一个取消订阅函数，一般都要在销毁流程中执行取消订阅\n    const unsubscribe = autorun(() => {\n      console.log(store.list)\n    })\n    return () => {\n      unsubscribe()\n    }\n  }, []);\n\n  return (\n    <div className=\"App\">App</div>\n  );\n}\n\nexport default App;\n```\n\n## mobx-react的使用(mobx-react@5)\n\n```bash\nnpm install mobx-react@5\n```\n\n/src/index.js\n\n```js\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\n// 通过高阶组件的方式注入，子组件通过props获取store的数据\nimport { Provider } from 'mobx-react';\nimport store from './mobx';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n);\n```\n### 类组件中使用mobx-react\n\n![pPXLWjA.png](https://z1.ax1x.com/2023/10/06/pPXLWjA.png)\n\n/src/App.js\n\n```js\nimport React, { Component } from 'react'\nimport { inject, observer } from 'mobx-react'\n\n// 通过inject修饰器注入指定接收的store\n@inject('store')\n@observer // 使用observer构建当前组件的父组件\nclass App extends Component {\n  componentDidMount() {\n    console.log(this.props.store.list, this.props.store.showTabbar)\n  }\n\n  render() {\n    return (\n      <div>\n        App\n      </div>\n    )\n  }\n}\n\nexport default App;\n```\n\n### 函数式组件中使用mobx-react\n\n函数式组件中使用方式1\n\n```js\nimport React from 'react';\nimport { Observer } from 'mobx-react';\n// 手动引入store\nimport store from \"./mobx\";\n\nfunction App() {\n  return (\n    <div>\n      App\n      {/* 使用Observer嵌套，返回回调函数的写法 */}\n      {/* 简化了原来通过autorun手动监听和移除的方式 */}\n      <Observer>\n        {\n          () => {\n            return store.list.map((item) => {\n              return <div>{item}</div>\n            })\n          }\n        }\n      </Observer>\n    </div>\n  )\n}\n\nexport default App\n```\n\n函数式组件中使用方式2\n\n```js\nimport React from 'react';\nimport { inject, observer } from 'mobx-react';\n\nfunction App(props) {\n  return (\n    <div>\n      {\n        props.store.list.map((item) => {\n          return <div>{item}</div>\n        })\n      }\n    </div>\n  )\n}\n\nexport default inject('store')(observer(App))\n```\n\n### inject使用\n\n```jsx\n// 顶层节点\nimport Dict from '@/mobx/dict';\nimport { Provider } from 'mobx-react'\n\n// 先使用高阶组件进行Provide\nconst App = () => {\n  return <Provider Dict={Dict}>\n    <Router></Router>\n  </Provider>\n}\n\n// 使用inject对需要的组件进行注入使用\nconst indexView = (props) => {\n  const { Dict } = props\n}\nexport default inject('Dict')(memo(observer(indexView)))\n```\n\n### inject引入多个mobx\n\n**ProviderCom高阶组件**（高阶组件引入后，其子集组件一样进行inject使用）\n\n```jsx\nimport React, { FC } from 'react'\nimport { Provider } from 'mobx-react'\n\n/**\n * @description Provider 高价组件\n *\n * @param Child 需要包裹的组件\n * @param mobx mobx 实例对象，或者实例对象组成的数组\n */\n// ProviderCom 高阶组件\nexport default function ProviderCom(\n\tChild: any,\n\tmobx: any\n) {\n\treturn (props: any) => {\n\t\treturn (\n\t\t\t<Provider {...mobx}>\n\t\t\t\t<Child {...props} />\n\t\t\t</Provider>\n\t\t)\n\t}\n}\n```\n\n**结合ProvideCom注入引用多个mobx**\n\n```jsx\nimport { inject, observer } from 'mobx-react';\n\nconst StandardExamModal = (props) => {\n  const {\n    ModalMobx,\n    Dict\n  } = props\n}\n\n// 注意写法\nexport default ProviderCom(inject('ModalMobx', 'Dict')(observer(StandardExamModal)), { ModalMobx, Dict })\n```\n\n## mobx6\n\n### 添加观测的几种方式\n\n### makeAutoObservable观测\n\n```js\nimport axios from \"axios\"\nimport { makeAutoObservable, runInAction } from \"mobx\"\n\n// 1.对应用状态进行建模。\n// calss也可直接导出作为timer实例的类型来使用!!!\nexport class Timer {\n  secondsPassed = 0\n\n  constructor() {\n    // 2.开启观测\n    makeAutoObservable(this)\n  }\n\n  increase() {\n    this.secondsPassed += 1\n  }\n\n  reset() {\n    this.secondsPassed = 0\n  }\n\n  // 异步\n  async decrement() {\n    // 1.\n    axios.get('xxx').then((res) => {\n      runInAction(() => {\n        this.secondsPassed -= res\n      })\n    })\n\n    // 2.\n    const res = await new Promise((resolve, reject) => {\n      setTimeout(() => {\n        // 减的数为10\n        resolve(10)\n      }, 1000);\n    })\n    // 直接这样会报警告\n    // this.secondsPassed -= res\n    runInAction(() => {\n      this.secondsPassed -= res\n    })\n  }\n}\n\nexport default new Timer()\n```\n\n### observer()使用-熟悉传值props法\n\n```js\n// 使用\n// 2.构建一个使用 observable 状态的“用户界面”。\nimport { observer } from \"mobx-react\";\nimport { myTimer，Timer } from './Timer'\n\nconst TimerView = memo(observer(({ timer }: { timer: Timer }) => (\n  <>\n    <div>当前秒数：{timer.secondsPassed}</div>\n    <button onClick={() => timer.reset()}>重置</button>\n  </>\n)))\n\nexport default TimerView\n\n// 1.添加\nReactDOM.render(<TimerView timer={myTimer} />, document.body)\n```\n\n### useLocalObservable实例使用法\n\n```js\nimport { observer, useLocalObservable } from \"mobx-react\";\n// 1.直接引入实例\nimport TimeMobx from './Timer';\n\nconst TimerView = observer(() => {\n  // 2.useLocalObservable直接使用mobx类导出的实例\n  const timeStore = useLocalObservable(() => TimeMobx)\n\n  return (<>\n    <div>当前秒数：{timeStore.secondsPassed}</div>\n    <button onClick={() => timeStore.reset()}>重置</button>\n  </>)\n})\n\nexport default TimerView\n```\n\n\n\n","slug":"first-test-blog","published":1,"updated":"2024-12-16T07:29:56.734Z","comments":1,"layout":"post","photos":[],"_id":"cm4qsfuf40001pou27apfffv7","content":"<h2 id=\"observable和autorun-mobx-5\"><a href=\"#observable和autorun-mobx-5\" class=\"headerlink\" title=\"observable和autorun(mobx@5)\"></a>observable和autorun(mobx@5)</h2><p>监听基本数据类型</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; observable, autorun &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;mobx&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> observableNumber = observable.<span class=\"title function_\">box</span>(<span class=\"number\">10</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> observableName = observable.<span class=\"title function_\">box</span>(<span class=\"string\">&#x27;zzf&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 自动监听基本数据类型observableNumber变化</span></span><br><span class=\"line\"><span class=\"comment\">// auto首先默认会自动执行一次</span></span><br><span class=\"line\"><span class=\"title function_\">autorun</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(observableNumber.<span class=\"title function_\">get</span>())</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">  observableNumber.<span class=\"title function_\">set</span>(<span class=\"number\">20</span>)</span><br><span class=\"line\">&#125;, <span class=\"number\">1000</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 监听基本数据类型observableName变化,两个监听互不干扰</span></span><br><span class=\"line\"><span class=\"comment\">// 需要用到什么就监听什么数据</span></span><br><span class=\"line\"><span class=\"title function_\">autorun</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(observableName.<span class=\"title function_\">get</span>())</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">  observableName.<span class=\"title function_\">set</span>(<span class=\"string\">&#x27;zzz&#x27;</span>)</span><br><span class=\"line\">&#125;, <span class=\"number\">2000</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">App</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">className</span>=<span class=\"string\">&quot;App&quot;</span>&gt;</span>App<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title class_\">App</span>;</span><br></pre></td></tr></table></figure>\n\n<p>监听复杂数据类型的两种写法</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; observable, autorun &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;mobx&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 1. 监听复杂数据类型的map写法</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> observableObj = observable.<span class=\"title function_\">map</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">name</span>: <span class=\"string\">&#x27;zzf&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">age</span>: <span class=\"number\">10</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">// 粒度化监听，以下只有当observableObj的name属性值改变时才会触发</span></span><br><span class=\"line\"><span class=\"title function_\">autorun</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(observableObj.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;name&#x27;</span>))</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">  observableObj.<span class=\"title function_\">set</span>(<span class=\"string\">&#x27;name&#x27;</span>, <span class=\"string\">&#x27;zzz&#x27;</span>)</span><br><span class=\"line\">&#125;, <span class=\"number\">1000</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 2.监听复杂数据类型的简便写法</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> observableObj = <span class=\"title function_\">observable</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">name</span>: <span class=\"string\">&#x27;zzf&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">age</span>: <span class=\"number\">10</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">// 粒度化监听，以下只有当observableObj的name属性值改变时才会触发</span></span><br><span class=\"line\"><span class=\"title function_\">autorun</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(observableObj.<span class=\"property\">name</span>)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">  observableObj.<span class=\"property\">name</span> = <span class=\"string\">&#x27;zzz&#x27;</span></span><br><span class=\"line\">&#125;, <span class=\"number\">1000</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">App</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">className</span>=<span class=\"string\">&quot;App&quot;</span>&gt;</span>App<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title class_\">App</span>;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"项目中使用mobx示例-observable-autorun\"><a href=\"#项目中使用mobx示例-observable-autorun\" class=\"headerlink\" title=\"项目中使用mobx示例(observable+autorun)\"></a>项目中使用mobx示例(observable+autorun)</h2><p>&#x2F;mobx&#x2F;index.js</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; observable &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;mobx&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> store = <span class=\"title function_\">observable</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">showTabbar</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"attr\">userName</span>: <span class=\"string\">&#x27;zzf&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">token</span>: <span class=\"string\">&#x27;zzzzdserw&#x27;</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> store</span><br></pre></td></tr></table></figure>\n\n<p>修改</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> store <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./mobx&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">store.<span class=\"property\">showTabbar</span> = <span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>\n\n<p>监听</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; observable, autorun &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;mobx&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> store <span class=\"keyword\">from</span> <span class=\"string\">&quot;./mobx&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">App</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"title function_\">autorun</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(store.<span class=\"property\">showTabbar</span>)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">className</span>=<span class=\"string\">&quot;App&quot;</span>&gt;</span>App<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title class_\">App</span>;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"配置configure严格模式\"><a href=\"#配置configure严格模式\" class=\"headerlink\" title=\"配置configure严格模式\"></a>配置configure严格模式</h2><p>以上通过<strong>store.showTabbar &#x3D; false来修改store的数据太过随便，不利于后续代码维护调试</strong>，<strong>通过configure配置严格模式，定义相应的action方法来修改store中的数据才更加安全</strong></p>\n<p>&#x2F;mobx&#x2F;index.js</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; observable, configure, action &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;mobx&quot;</span>;</span><br><span class=\"line\"><span class=\"title function_\">configure</span>(&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 非严格模式</span></span><br><span class=\"line\">  <span class=\"comment\">// enforceActions: &#x27;never&#x27;</span></span><br><span class=\"line\">  <span class=\"comment\">// 严格模式，不允许在此文件外直接修改store的数据</span></span><br><span class=\"line\">  <span class=\"attr\">enforceActions</span>: <span class=\"string\">&#x27;always&#x27;</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> store = <span class=\"title function_\">observable</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">showTabbar</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"attr\">userName</span>: <span class=\"string\">&#x27;zzf&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">token</span>: <span class=\"string\">&#x27;zzzzdserw&#x27;</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">changeTabShow</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">showTabbar</span> = <span class=\"literal\">true</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"title function_\">changeTabHide</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">showTabbar</span> = <span class=\"literal\">false</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;, &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 标记changeTabShow，changeTabHide两个方法是action,专门用于修改showTabbar的值</span></span><br><span class=\"line\">  <span class=\"attr\">changeTabShow</span>: action,</span><br><span class=\"line\">  <span class=\"attr\">changeTabHide</span>: action</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> store</span><br></pre></td></tr></table></figure>\n\n<p>修改</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> store <span class=\"keyword\">from</span> <span class=\"string\">&#x27;mobx&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">store.<span class=\"title function_\">changeTabShow</span>()</span><br><span class=\"line\">store.<span class=\"title function_\">changeTabHide</span>()</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"class类-装饰器写法-observable-action\"><a href=\"#class类-装饰器写法-observable-action\" class=\"headerlink\" title=\"class类+装饰器写法(@observable @action)\"></a>class类+装饰器写法(@observable @action)</h2><p>&#x2F;mobx&#x2F;index.js</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; observable, configure, action &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;mobx&quot;</span>;</span><br><span class=\"line\"><span class=\"title function_\">configure</span>(&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 非严格模式</span></span><br><span class=\"line\">  <span class=\"comment\">// enforceActions: &#x27;never&#x27;</span></span><br><span class=\"line\">  <span class=\"comment\">// 严格模式，不允许在此文件外直接修改store的数据</span></span><br><span class=\"line\">  <span class=\"attr\">enforceActions</span>: <span class=\"string\">&#x27;always&#x27;</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// const store = observable(&#123;</span></span><br><span class=\"line\"><span class=\"comment\">//   showTabbar: true,</span></span><br><span class=\"line\"><span class=\"comment\">//   userName: &#x27;zzf&#x27;,</span></span><br><span class=\"line\"><span class=\"comment\">//   token: &#x27;zzzzdserw&#x27;,</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//   changeTabShow() &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//     this.showTabbar = true</span></span><br><span class=\"line\"><span class=\"comment\">//   &#125;,</span></span><br><span class=\"line\"><span class=\"comment\">//   changeTabHide() &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//     this.showTabbar = false</span></span><br><span class=\"line\"><span class=\"comment\">//   &#125;</span></span><br><span class=\"line\"><span class=\"comment\">// &#125;, &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//   // 标记changeTabShow，changeTabHide两个方法是action,专门用于修改showTabbar的值</span></span><br><span class=\"line\"><span class=\"comment\">//   changeTabShow: action,</span></span><br><span class=\"line\"><span class=\"comment\">//   changeTabHide: action</span></span><br><span class=\"line\"><span class=\"comment\">// &#125;)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 类加装饰器写法</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Store</span> &#123;</span><br><span class=\"line\">  @observable showTabbar = <span class=\"literal\">true</span></span><br><span class=\"line\">  @observable userName = <span class=\"string\">&#x27;zzf&#x27;</span></span><br><span class=\"line\">  @observable token = <span class=\"string\">&#x27;zzzzdserw&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  @action <span class=\"title function_\">changeTabShow</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">showTabbar</span> = <span class=\"literal\">true</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  @action <span class=\"title function_\">changeTabHide</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">showTabbar</span> = <span class=\"literal\">false</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> store = <span class=\"keyword\">new</span> <span class=\"title class_\">Store</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> store</span><br></pre></td></tr></table></figure>\n\n<p>装饰器语法报错解决</p>\n<ol>\n<li>让编辑器支持装饰器语法 (vscode设置搜experimentalDecorators进行勾选)</li>\n</ol>\n<p><img src=\"https://z1.ax1x.com/2023/10/06/pPX7Hyt.png\" alt=\"pPX7Hyt.png\"></p>\n<ol start=\"2\">\n<li><p>代码支持装饰器语法</p>\n<p>2.1</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install @babel/core @babel/plugin-proposal-decorators @babel/preset-env</span><br></pre></td></tr></table></figure>\n\n<p>2.2 创建.babelrc</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;presets&quot;: [</span><br><span class=\"line\">    &quot;@babel/preset-env&quot;</span><br><span class=\"line\">  ],</span><br><span class=\"line\">  &quot;plugins&quot;: [</span><br><span class=\"line\">    [</span><br><span class=\"line\">      &quot;@babel/plugin-proposal-decorators&quot;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        &quot;legacy&quot;: true</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>2.3 创建config-overrides.js</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;path&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123; override, addDecoratorsLegacy &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;customize-cra&#x27;</span>)</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">resolve</span>(<span class=\"params\">dir</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> path.<span class=\"title function_\">join</span>(__dirname, dir)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">customize</span> = (<span class=\"params\"></span>) =&gt; <span class=\"function\">(<span class=\"params\">config, env</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    config.<span class=\"property\">resolve</span>.<span class=\"property\">alias</span>[<span class=\"string\">&#x27;@&#x27;</span>] = <span class=\"title function_\">resolve</span>(<span class=\"string\">&#x27;src&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (env === <span class=\"string\">&#x27;production&#x27;</span>) &#123;</span><br><span class=\"line\">        config.<span class=\"property\">externals</span> = &#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;react&#x27;</span>: <span class=\"string\">&#x27;React&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;react-dom&#x27;</span>: <span class=\"string\">&#x27;ReactDOM&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">return</span> config</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = <span class=\"title function_\">override</span>(<span class=\"title function_\">addDecoratorsLegacy</span>(), <span class=\"title function_\">customize</span>())</span><br></pre></td></tr></table></figure>\n\n<p>2.4 安装依赖</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install customize-cra react-app-rewired</span><br></pre></td></tr></table></figure>\n\n<p>2.5 修改package.json</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\"><span class=\"attr\">&quot;scripts&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;start&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;react-app-rewired start&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;build&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;react-app-rewired build&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;test&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;react-app-rewired test&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;eject&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;react-app-rewired eject&quot;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n\n<p>2.6还有<strong>报错就重新用vscode打开项目重跑</strong></p>\n<p>​</p>\n</li>\n</ol>\n<h2 id=\"异步action的处理\"><a href=\"#异步action的处理\" class=\"headerlink\" title=\"异步action的处理\"></a>异步action的处理</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; observable, configure, action, runInAction &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;mobx&quot;</span>;</span><br><span class=\"line\"><span class=\"title function_\">configure</span>(&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 非严格模式</span></span><br><span class=\"line\">  <span class=\"comment\">// enforceActions: &#x27;never&#x27;</span></span><br><span class=\"line\">  <span class=\"comment\">// 严格模式，不允许在此文件外直接修改store的数据</span></span><br><span class=\"line\">  <span class=\"attr\">enforceActions</span>: <span class=\"string\">&#x27;always&#x27;</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 类加装饰器写法</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> axios <span class=\"keyword\">from</span> <span class=\"string\">&#x27;axios&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Store</span> &#123;</span><br><span class=\"line\">  @observable list = []</span><br><span class=\"line\">  </span><br><span class=\"line\">  @action <span class=\"keyword\">async</span> <span class=\"title function_\">getList</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 1.</span></span><br><span class=\"line\">    axios.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;http://xxxx&#x27;</span>).<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 下面直接给this.list赋值会被认为是在aaction外部修改，出现报错</span></span><br><span class=\"line\">      <span class=\"comment\">// this.list = res.data.list</span></span><br><span class=\"line\">      <span class=\"comment\">// 使用runInAction表示还是在action内部进行的list的修改</span></span><br><span class=\"line\">      <span class=\"title function_\">runInAction</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">list</span> = res.<span class=\"property\">data</span>.<span class=\"property\">list</span></span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"comment\">// 2.async+await方式</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> res = <span class=\"keyword\">await</span> axios.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;http://xxxx&#x27;</span>)</span><br><span class=\"line\">    <span class=\"title function_\">runInAction</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">list</span> = res.<span class=\"property\">data</span>.<span class=\"property\">list</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> store = <span class=\"keyword\">new</span> <span class=\"title class_\">Store</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> store</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"autorun的订阅与取消\"><a href=\"#autorun的订阅与取消\" class=\"headerlink\" title=\"autorun的订阅与取消\"></a>autorun的订阅与取消</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; observable, autorun &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;mobx&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> store <span class=\"keyword\">from</span> <span class=\"string\">&quot;./mobx&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; useEffect &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;react&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">App</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"title function_\">useEffect</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// autorun执行会返回一个取消订阅函数，一般都要在销毁流程中执行取消订阅</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> unsubscribe = <span class=\"title function_\">autorun</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(store.<span class=\"property\">list</span>)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"title function_\">unsubscribe</span>()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;, []);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">className</span>=<span class=\"string\">&quot;App&quot;</span>&gt;</span>App<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title class_\">App</span>;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"mobx-react的使用-mobx-react-5\"><a href=\"#mobx-react的使用-mobx-react-5\" class=\"headerlink\" title=\"mobx-react的使用(mobx-react@5)\"></a>mobx-react的使用(mobx-react@5)</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install mobx-react@5</span><br></pre></td></tr></table></figure>\n\n<p>&#x2F;src&#x2F;index.js</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">React</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">ReactDOM</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react-dom/client&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">App</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./App&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 通过高阶组件的方式注入，子组件通过props获取store的数据</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">Provider</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;mobx-react&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> store <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./mobx&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> root = <span class=\"title class_\">ReactDOM</span>.<span class=\"title function_\">createRoot</span>(<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;root&#x27;</span>));</span><br><span class=\"line\">root.<span class=\"title function_\">render</span>(</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Provider</span> <span class=\"attr\">store</span>=<span class=\"string\">&#123;store&#125;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">App</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">Provider</span>&gt;</span></span></span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n<h3 id=\"类组件中使用mobx-react\"><a href=\"#类组件中使用mobx-react\" class=\"headerlink\" title=\"类组件中使用mobx-react\"></a>类组件中使用mobx-react</h3><p><img src=\"https://z1.ax1x.com/2023/10/06/pPXLWjA.png\" alt=\"pPXLWjA.png\"></p>\n<p>&#x2F;src&#x2F;App.js</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">React</span>, &#123; <span class=\"title class_\">Component</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; inject, observer &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;mobx-react&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 通过inject修饰器注入指定接收的store</span></span><br><span class=\"line\">@<span class=\"title function_\">inject</span>(<span class=\"string\">&#x27;store&#x27;</span>)</span><br><span class=\"line\">@observer <span class=\"comment\">// 使用observer构建当前组件的父组件</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">App</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">Component</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">componentDidMount</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">props</span>.<span class=\"property\">store</span>.<span class=\"property\">list</span>, <span class=\"variable language_\">this</span>.<span class=\"property\">props</span>.<span class=\"property\">store</span>.<span class=\"property\">showTabbar</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        App</span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">    )</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title class_\">App</span>;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"函数式组件中使用mobx-react\"><a href=\"#函数式组件中使用mobx-react\" class=\"headerlink\" title=\"函数式组件中使用mobx-react\"></a>函数式组件中使用mobx-react</h3><p>函数式组件中使用方式1</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">React</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">Observer</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;mobx-react&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">// 手动引入store</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> store <span class=\"keyword\">from</span> <span class=\"string\">&quot;./mobx&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">App</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      App</span></span><br><span class=\"line\"><span class=\"language-xml\">      &#123;/* 使用Observer嵌套，返回回调函数的写法 */&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">      &#123;/* 简化了原来通过autorun手动监听和移除的方式 */&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">Observer</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        &#123;</span></span><br><span class=\"line\"><span class=\"language-xml\">          () =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"language-xml\">            return store.list.map((item) =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"language-xml\">              return <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>&#123;item&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">            &#125;)</span></span><br><span class=\"line\"><span class=\"language-xml\">          &#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">Observer</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">  )</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title class_\">App</span></span><br></pre></td></tr></table></figure>\n\n<p>函数式组件中使用方式2</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">React</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; inject, observer &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;mobx-react&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">App</span>(<span class=\"params\">props</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      &#123;</span></span><br><span class=\"line\"><span class=\"language-xml\">        props.store.list.map((item) =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"language-xml\">          return <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>&#123;item&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        &#125;)</span></span><br><span class=\"line\"><span class=\"language-xml\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">  )</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title function_\">inject</span>(<span class=\"string\">&#x27;store&#x27;</span>)(<span class=\"title function_\">observer</span>(<span class=\"title class_\">App</span>))</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"inject使用\"><a href=\"#inject使用\" class=\"headerlink\" title=\"inject使用\"></a>inject使用</h3><figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 顶层节点</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">Dict</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/mobx/dict&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">Provider</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;mobx-react&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 先使用高阶组件进行Provide</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">App</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Provider</span> <span class=\"attr\">Dict</span>=<span class=\"string\">&#123;Dict&#125;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">Router</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Router</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;/<span class=\"name\">Provider</span>&gt;</span></span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 使用inject对需要的组件进行注入使用</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">indexView</span> = (<span class=\"params\">props</span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> &#123; <span class=\"title class_\">Dict</span> &#125; = props</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title function_\">inject</span>(<span class=\"string\">&#x27;Dict&#x27;</span>)(<span class=\"title function_\">memo</span>(<span class=\"title function_\">observer</span>(indexView)))</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"inject引入多个mobx\"><a href=\"#inject引入多个mobx\" class=\"headerlink\" title=\"inject引入多个mobx\"></a>inject引入多个mobx</h3><p><strong>ProviderCom高阶组件</strong>（高阶组件引入后，其子集组件一样进行inject使用）</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">React</span>, &#123; <span class=\"variable constant_\">FC</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">Provider</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;mobx-react&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@description</span> Provider 高价组件</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> Child 需要包裹的组件</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> mobx mobx 实例对象，或者实例对象组成的数组</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"comment\">// ProviderCom 高阶组件</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"keyword\">function</span> <span class=\"title function_\">ProviderCom</span>(<span class=\"params\"></span></span><br><span class=\"line\"><span class=\"params\">\tChild: any,</span></span><br><span class=\"line\"><span class=\"params\">\tmobx: any</span></span><br><span class=\"line\"><span class=\"params\"></span>) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"function\">(<span class=\"params\">props: any</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> (</span><br><span class=\"line\">\t\t\t<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Provider</span> &#123;<span class=\"attr\">...mobx</span>&#125;&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">Child</span> &#123;<span class=\"attr\">...props</span>&#125; /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">Provider</span>&gt;</span></span></span><br><span class=\"line\">\t\t)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>结合ProvideCom注入引用多个mobx</strong></p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; inject, observer &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;mobx-react&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">StandardExamModal</span> = (<span class=\"params\">props</span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> &#123;</span><br><span class=\"line\">    <span class=\"title class_\">ModalMobx</span>,</span><br><span class=\"line\">    <span class=\"title class_\">Dict</span></span><br><span class=\"line\">  &#125; = props</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 注意写法</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title class_\">ProviderCom</span>(<span class=\"title function_\">inject</span>(<span class=\"string\">&#x27;ModalMobx&#x27;</span>, <span class=\"string\">&#x27;Dict&#x27;</span>)(<span class=\"title function_\">observer</span>(<span class=\"title class_\">StandardExamModal</span>)), &#123; <span class=\"title class_\">ModalMobx</span>, <span class=\"title class_\">Dict</span> &#125;)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"mobx6\"><a href=\"#mobx6\" class=\"headerlink\" title=\"mobx6\"></a>mobx6</h2><h3 id=\"添加观测的几种方式\"><a href=\"#添加观测的几种方式\" class=\"headerlink\" title=\"添加观测的几种方式\"></a>添加观测的几种方式</h3><h3 id=\"makeAutoObservable观测\"><a href=\"#makeAutoObservable观测\" class=\"headerlink\" title=\"makeAutoObservable观测\"></a>makeAutoObservable观测</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> axios <span class=\"keyword\">from</span> <span class=\"string\">&quot;axios&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; makeAutoObservable, runInAction &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;mobx&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 1.对应用状态进行建模。</span></span><br><span class=\"line\"><span class=\"comment\">// calss也可直接导出作为timer实例的类型来使用!!!</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Timer</span> &#123;</span><br><span class=\"line\">  secondsPassed = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">constructor</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 2.开启观测</span></span><br><span class=\"line\">    <span class=\"title function_\">makeAutoObservable</span>(<span class=\"variable language_\">this</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">increase</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">secondsPassed</span> += <span class=\"number\">1</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">reset</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">secondsPassed</span> = <span class=\"number\">0</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 异步</span></span><br><span class=\"line\">  <span class=\"keyword\">async</span> <span class=\"title function_\">decrement</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 1.</span></span><br><span class=\"line\">    axios.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;xxx&#x27;</span>).<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"title function_\">runInAction</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">secondsPassed</span> -= res</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 2.</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> res = <span class=\"keyword\">await</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 减的数为10</span></span><br><span class=\"line\">        <span class=\"title function_\">resolve</span>(<span class=\"number\">10</span>)</span><br><span class=\"line\">      &#125;, <span class=\"number\">1000</span>);</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"comment\">// 直接这样会报警告</span></span><br><span class=\"line\">    <span class=\"comment\">// this.secondsPassed -= res</span></span><br><span class=\"line\">    <span class=\"title function_\">runInAction</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">secondsPassed</span> -= res</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Timer</span>()</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"observer-使用-熟悉传值props法\"><a href=\"#observer-使用-熟悉传值props法\" class=\"headerlink\" title=\"observer()使用-熟悉传值props法\"></a>observer()使用-熟悉传值props法</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 使用</span></span><br><span class=\"line\"><span class=\"comment\">// 2.构建一个使用 observable 状态的“用户界面”。</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; observer &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;mobx-react&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; myTimer，<span class=\"title class_\">Timer</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./Timer&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">TimerView</span> = <span class=\"title function_\">memo</span>(<span class=\"title function_\">observer</span>(<span class=\"function\">(<span class=\"params\">&#123; timer &#125;: &#123; timer: Timer &#125;</span>) =&gt;</span> (</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>当前秒数：&#123;timer.secondsPassed&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;()</span> =&gt;</span> timer.reset()&#125;&gt;重置<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;/&gt;</span></span></span><br><span class=\"line\">)))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title class_\">TimerView</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 1.添加</span></span><br><span class=\"line\"><span class=\"title class_\">ReactDOM</span>.<span class=\"title function_\">render</span>(<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">TimerView</span> <span class=\"attr\">timer</span>=<span class=\"string\">&#123;myTimer&#125;</span> /&gt;</span></span>, <span class=\"variable language_\">document</span>.<span class=\"property\">body</span>)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"useLocalObservable实例使用法\"><a href=\"#useLocalObservable实例使用法\" class=\"headerlink\" title=\"useLocalObservable实例使用法\"></a>useLocalObservable实例使用法</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; observer, useLocalObservable &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;mobx-react&quot;</span>;</span><br><span class=\"line\"><span class=\"comment\">// 1.直接引入实例</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">TimeMobx</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./Timer&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">TimerView</span> = <span class=\"title function_\">observer</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 2.useLocalObservable直接使用mobx类导出的实例</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> timeStore = <span class=\"title function_\">useLocalObservable</span>(<span class=\"function\">() =&gt;</span> <span class=\"title class_\">TimeMobx</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> (<span class=\"language-xml\"><span class=\"tag\">&lt;&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>当前秒数：&#123;timeStore.secondsPassed&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;()</span> =&gt;</span> timeStore.reset()&#125;&gt;重置<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;/&gt;</span></span>)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title class_\">TimerView</span></span><br></pre></td></tr></table></figure>\n\n\n\n","cover":false,"excerpt":"","more":"<h2 id=\"observable和autorun-mobx-5\"><a href=\"#observable和autorun-mobx-5\" class=\"headerlink\" title=\"observable和autorun(mobx@5)\"></a>observable和autorun(mobx@5)</h2><p>监听基本数据类型</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; observable, autorun &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;mobx&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> observableNumber = observable.<span class=\"title function_\">box</span>(<span class=\"number\">10</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> observableName = observable.<span class=\"title function_\">box</span>(<span class=\"string\">&#x27;zzf&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 自动监听基本数据类型observableNumber变化</span></span><br><span class=\"line\"><span class=\"comment\">// auto首先默认会自动执行一次</span></span><br><span class=\"line\"><span class=\"title function_\">autorun</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(observableNumber.<span class=\"title function_\">get</span>())</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">  observableNumber.<span class=\"title function_\">set</span>(<span class=\"number\">20</span>)</span><br><span class=\"line\">&#125;, <span class=\"number\">1000</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 监听基本数据类型observableName变化,两个监听互不干扰</span></span><br><span class=\"line\"><span class=\"comment\">// 需要用到什么就监听什么数据</span></span><br><span class=\"line\"><span class=\"title function_\">autorun</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(observableName.<span class=\"title function_\">get</span>())</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">  observableName.<span class=\"title function_\">set</span>(<span class=\"string\">&#x27;zzz&#x27;</span>)</span><br><span class=\"line\">&#125;, <span class=\"number\">2000</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">App</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">className</span>=<span class=\"string\">&quot;App&quot;</span>&gt;</span>App<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title class_\">App</span>;</span><br></pre></td></tr></table></figure>\n\n<p>监听复杂数据类型的两种写法</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; observable, autorun &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;mobx&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 1. 监听复杂数据类型的map写法</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> observableObj = observable.<span class=\"title function_\">map</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">name</span>: <span class=\"string\">&#x27;zzf&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">age</span>: <span class=\"number\">10</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">// 粒度化监听，以下只有当observableObj的name属性值改变时才会触发</span></span><br><span class=\"line\"><span class=\"title function_\">autorun</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(observableObj.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;name&#x27;</span>))</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">  observableObj.<span class=\"title function_\">set</span>(<span class=\"string\">&#x27;name&#x27;</span>, <span class=\"string\">&#x27;zzz&#x27;</span>)</span><br><span class=\"line\">&#125;, <span class=\"number\">1000</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 2.监听复杂数据类型的简便写法</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> observableObj = <span class=\"title function_\">observable</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">name</span>: <span class=\"string\">&#x27;zzf&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">age</span>: <span class=\"number\">10</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">// 粒度化监听，以下只有当observableObj的name属性值改变时才会触发</span></span><br><span class=\"line\"><span class=\"title function_\">autorun</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(observableObj.<span class=\"property\">name</span>)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">  observableObj.<span class=\"property\">name</span> = <span class=\"string\">&#x27;zzz&#x27;</span></span><br><span class=\"line\">&#125;, <span class=\"number\">1000</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">App</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">className</span>=<span class=\"string\">&quot;App&quot;</span>&gt;</span>App<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title class_\">App</span>;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"项目中使用mobx示例-observable-autorun\"><a href=\"#项目中使用mobx示例-observable-autorun\" class=\"headerlink\" title=\"项目中使用mobx示例(observable+autorun)\"></a>项目中使用mobx示例(observable+autorun)</h2><p>&#x2F;mobx&#x2F;index.js</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; observable &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;mobx&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> store = <span class=\"title function_\">observable</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">showTabbar</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"attr\">userName</span>: <span class=\"string\">&#x27;zzf&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">token</span>: <span class=\"string\">&#x27;zzzzdserw&#x27;</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> store</span><br></pre></td></tr></table></figure>\n\n<p>修改</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> store <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./mobx&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">store.<span class=\"property\">showTabbar</span> = <span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>\n\n<p>监听</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; observable, autorun &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;mobx&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> store <span class=\"keyword\">from</span> <span class=\"string\">&quot;./mobx&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">App</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"title function_\">autorun</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(store.<span class=\"property\">showTabbar</span>)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">className</span>=<span class=\"string\">&quot;App&quot;</span>&gt;</span>App<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title class_\">App</span>;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"配置configure严格模式\"><a href=\"#配置configure严格模式\" class=\"headerlink\" title=\"配置configure严格模式\"></a>配置configure严格模式</h2><p>以上通过<strong>store.showTabbar &#x3D; false来修改store的数据太过随便，不利于后续代码维护调试</strong>，<strong>通过configure配置严格模式，定义相应的action方法来修改store中的数据才更加安全</strong></p>\n<p>&#x2F;mobx&#x2F;index.js</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; observable, configure, action &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;mobx&quot;</span>;</span><br><span class=\"line\"><span class=\"title function_\">configure</span>(&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 非严格模式</span></span><br><span class=\"line\">  <span class=\"comment\">// enforceActions: &#x27;never&#x27;</span></span><br><span class=\"line\">  <span class=\"comment\">// 严格模式，不允许在此文件外直接修改store的数据</span></span><br><span class=\"line\">  <span class=\"attr\">enforceActions</span>: <span class=\"string\">&#x27;always&#x27;</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> store = <span class=\"title function_\">observable</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">showTabbar</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"attr\">userName</span>: <span class=\"string\">&#x27;zzf&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">token</span>: <span class=\"string\">&#x27;zzzzdserw&#x27;</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">changeTabShow</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">showTabbar</span> = <span class=\"literal\">true</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"title function_\">changeTabHide</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">showTabbar</span> = <span class=\"literal\">false</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;, &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 标记changeTabShow，changeTabHide两个方法是action,专门用于修改showTabbar的值</span></span><br><span class=\"line\">  <span class=\"attr\">changeTabShow</span>: action,</span><br><span class=\"line\">  <span class=\"attr\">changeTabHide</span>: action</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> store</span><br></pre></td></tr></table></figure>\n\n<p>修改</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> store <span class=\"keyword\">from</span> <span class=\"string\">&#x27;mobx&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">store.<span class=\"title function_\">changeTabShow</span>()</span><br><span class=\"line\">store.<span class=\"title function_\">changeTabHide</span>()</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"class类-装饰器写法-observable-action\"><a href=\"#class类-装饰器写法-observable-action\" class=\"headerlink\" title=\"class类+装饰器写法(@observable @action)\"></a>class类+装饰器写法(@observable @action)</h2><p>&#x2F;mobx&#x2F;index.js</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; observable, configure, action &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;mobx&quot;</span>;</span><br><span class=\"line\"><span class=\"title function_\">configure</span>(&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 非严格模式</span></span><br><span class=\"line\">  <span class=\"comment\">// enforceActions: &#x27;never&#x27;</span></span><br><span class=\"line\">  <span class=\"comment\">// 严格模式，不允许在此文件外直接修改store的数据</span></span><br><span class=\"line\">  <span class=\"attr\">enforceActions</span>: <span class=\"string\">&#x27;always&#x27;</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// const store = observable(&#123;</span></span><br><span class=\"line\"><span class=\"comment\">//   showTabbar: true,</span></span><br><span class=\"line\"><span class=\"comment\">//   userName: &#x27;zzf&#x27;,</span></span><br><span class=\"line\"><span class=\"comment\">//   token: &#x27;zzzzdserw&#x27;,</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//   changeTabShow() &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//     this.showTabbar = true</span></span><br><span class=\"line\"><span class=\"comment\">//   &#125;,</span></span><br><span class=\"line\"><span class=\"comment\">//   changeTabHide() &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//     this.showTabbar = false</span></span><br><span class=\"line\"><span class=\"comment\">//   &#125;</span></span><br><span class=\"line\"><span class=\"comment\">// &#125;, &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//   // 标记changeTabShow，changeTabHide两个方法是action,专门用于修改showTabbar的值</span></span><br><span class=\"line\"><span class=\"comment\">//   changeTabShow: action,</span></span><br><span class=\"line\"><span class=\"comment\">//   changeTabHide: action</span></span><br><span class=\"line\"><span class=\"comment\">// &#125;)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 类加装饰器写法</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Store</span> &#123;</span><br><span class=\"line\">  @observable showTabbar = <span class=\"literal\">true</span></span><br><span class=\"line\">  @observable userName = <span class=\"string\">&#x27;zzf&#x27;</span></span><br><span class=\"line\">  @observable token = <span class=\"string\">&#x27;zzzzdserw&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  @action <span class=\"title function_\">changeTabShow</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">showTabbar</span> = <span class=\"literal\">true</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  @action <span class=\"title function_\">changeTabHide</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">showTabbar</span> = <span class=\"literal\">false</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> store = <span class=\"keyword\">new</span> <span class=\"title class_\">Store</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> store</span><br></pre></td></tr></table></figure>\n\n<p>装饰器语法报错解决</p>\n<ol>\n<li>让编辑器支持装饰器语法 (vscode设置搜experimentalDecorators进行勾选)</li>\n</ol>\n<p><img src=\"https://z1.ax1x.com/2023/10/06/pPX7Hyt.png\" alt=\"pPX7Hyt.png\"></p>\n<ol start=\"2\">\n<li><p>代码支持装饰器语法</p>\n<p>2.1</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install @babel/core @babel/plugin-proposal-decorators @babel/preset-env</span><br></pre></td></tr></table></figure>\n\n<p>2.2 创建.babelrc</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;presets&quot;: [</span><br><span class=\"line\">    &quot;@babel/preset-env&quot;</span><br><span class=\"line\">  ],</span><br><span class=\"line\">  &quot;plugins&quot;: [</span><br><span class=\"line\">    [</span><br><span class=\"line\">      &quot;@babel/plugin-proposal-decorators&quot;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        &quot;legacy&quot;: true</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>2.3 创建config-overrides.js</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;path&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123; override, addDecoratorsLegacy &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;customize-cra&#x27;</span>)</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">resolve</span>(<span class=\"params\">dir</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> path.<span class=\"title function_\">join</span>(__dirname, dir)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">customize</span> = (<span class=\"params\"></span>) =&gt; <span class=\"function\">(<span class=\"params\">config, env</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    config.<span class=\"property\">resolve</span>.<span class=\"property\">alias</span>[<span class=\"string\">&#x27;@&#x27;</span>] = <span class=\"title function_\">resolve</span>(<span class=\"string\">&#x27;src&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (env === <span class=\"string\">&#x27;production&#x27;</span>) &#123;</span><br><span class=\"line\">        config.<span class=\"property\">externals</span> = &#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;react&#x27;</span>: <span class=\"string\">&#x27;React&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;react-dom&#x27;</span>: <span class=\"string\">&#x27;ReactDOM&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">return</span> config</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = <span class=\"title function_\">override</span>(<span class=\"title function_\">addDecoratorsLegacy</span>(), <span class=\"title function_\">customize</span>())</span><br></pre></td></tr></table></figure>\n\n<p>2.4 安装依赖</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install customize-cra react-app-rewired</span><br></pre></td></tr></table></figure>\n\n<p>2.5 修改package.json</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\"><span class=\"attr\">&quot;scripts&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;start&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;react-app-rewired start&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;build&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;react-app-rewired build&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;test&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;react-app-rewired test&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;eject&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;react-app-rewired eject&quot;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n\n<p>2.6还有<strong>报错就重新用vscode打开项目重跑</strong></p>\n<p>​</p>\n</li>\n</ol>\n<h2 id=\"异步action的处理\"><a href=\"#异步action的处理\" class=\"headerlink\" title=\"异步action的处理\"></a>异步action的处理</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; observable, configure, action, runInAction &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;mobx&quot;</span>;</span><br><span class=\"line\"><span class=\"title function_\">configure</span>(&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 非严格模式</span></span><br><span class=\"line\">  <span class=\"comment\">// enforceActions: &#x27;never&#x27;</span></span><br><span class=\"line\">  <span class=\"comment\">// 严格模式，不允许在此文件外直接修改store的数据</span></span><br><span class=\"line\">  <span class=\"attr\">enforceActions</span>: <span class=\"string\">&#x27;always&#x27;</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 类加装饰器写法</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> axios <span class=\"keyword\">from</span> <span class=\"string\">&#x27;axios&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Store</span> &#123;</span><br><span class=\"line\">  @observable list = []</span><br><span class=\"line\">  </span><br><span class=\"line\">  @action <span class=\"keyword\">async</span> <span class=\"title function_\">getList</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 1.</span></span><br><span class=\"line\">    axios.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;http://xxxx&#x27;</span>).<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 下面直接给this.list赋值会被认为是在aaction外部修改，出现报错</span></span><br><span class=\"line\">      <span class=\"comment\">// this.list = res.data.list</span></span><br><span class=\"line\">      <span class=\"comment\">// 使用runInAction表示还是在action内部进行的list的修改</span></span><br><span class=\"line\">      <span class=\"title function_\">runInAction</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">list</span> = res.<span class=\"property\">data</span>.<span class=\"property\">list</span></span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"comment\">// 2.async+await方式</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> res = <span class=\"keyword\">await</span> axios.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;http://xxxx&#x27;</span>)</span><br><span class=\"line\">    <span class=\"title function_\">runInAction</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">list</span> = res.<span class=\"property\">data</span>.<span class=\"property\">list</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> store = <span class=\"keyword\">new</span> <span class=\"title class_\">Store</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> store</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"autorun的订阅与取消\"><a href=\"#autorun的订阅与取消\" class=\"headerlink\" title=\"autorun的订阅与取消\"></a>autorun的订阅与取消</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; observable, autorun &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;mobx&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> store <span class=\"keyword\">from</span> <span class=\"string\">&quot;./mobx&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; useEffect &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;react&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">App</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"title function_\">useEffect</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// autorun执行会返回一个取消订阅函数，一般都要在销毁流程中执行取消订阅</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> unsubscribe = <span class=\"title function_\">autorun</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(store.<span class=\"property\">list</span>)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"title function_\">unsubscribe</span>()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;, []);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">className</span>=<span class=\"string\">&quot;App&quot;</span>&gt;</span>App<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title class_\">App</span>;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"mobx-react的使用-mobx-react-5\"><a href=\"#mobx-react的使用-mobx-react-5\" class=\"headerlink\" title=\"mobx-react的使用(mobx-react@5)\"></a>mobx-react的使用(mobx-react@5)</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install mobx-react@5</span><br></pre></td></tr></table></figure>\n\n<p>&#x2F;src&#x2F;index.js</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">React</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">ReactDOM</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react-dom/client&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">App</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./App&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 通过高阶组件的方式注入，子组件通过props获取store的数据</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">Provider</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;mobx-react&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> store <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./mobx&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> root = <span class=\"title class_\">ReactDOM</span>.<span class=\"title function_\">createRoot</span>(<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;root&#x27;</span>));</span><br><span class=\"line\">root.<span class=\"title function_\">render</span>(</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Provider</span> <span class=\"attr\">store</span>=<span class=\"string\">&#123;store&#125;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">App</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">Provider</span>&gt;</span></span></span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n<h3 id=\"类组件中使用mobx-react\"><a href=\"#类组件中使用mobx-react\" class=\"headerlink\" title=\"类组件中使用mobx-react\"></a>类组件中使用mobx-react</h3><p><img src=\"https://z1.ax1x.com/2023/10/06/pPXLWjA.png\" alt=\"pPXLWjA.png\"></p>\n<p>&#x2F;src&#x2F;App.js</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">React</span>, &#123; <span class=\"title class_\">Component</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; inject, observer &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;mobx-react&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 通过inject修饰器注入指定接收的store</span></span><br><span class=\"line\">@<span class=\"title function_\">inject</span>(<span class=\"string\">&#x27;store&#x27;</span>)</span><br><span class=\"line\">@observer <span class=\"comment\">// 使用observer构建当前组件的父组件</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">App</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">Component</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">componentDidMount</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">props</span>.<span class=\"property\">store</span>.<span class=\"property\">list</span>, <span class=\"variable language_\">this</span>.<span class=\"property\">props</span>.<span class=\"property\">store</span>.<span class=\"property\">showTabbar</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        App</span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">    )</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title class_\">App</span>;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"函数式组件中使用mobx-react\"><a href=\"#函数式组件中使用mobx-react\" class=\"headerlink\" title=\"函数式组件中使用mobx-react\"></a>函数式组件中使用mobx-react</h3><p>函数式组件中使用方式1</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">React</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">Observer</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;mobx-react&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">// 手动引入store</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> store <span class=\"keyword\">from</span> <span class=\"string\">&quot;./mobx&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">App</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      App</span></span><br><span class=\"line\"><span class=\"language-xml\">      &#123;/* 使用Observer嵌套，返回回调函数的写法 */&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">      &#123;/* 简化了原来通过autorun手动监听和移除的方式 */&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">Observer</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        &#123;</span></span><br><span class=\"line\"><span class=\"language-xml\">          () =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"language-xml\">            return store.list.map((item) =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"language-xml\">              return <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>&#123;item&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">            &#125;)</span></span><br><span class=\"line\"><span class=\"language-xml\">          &#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">Observer</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">  )</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title class_\">App</span></span><br></pre></td></tr></table></figure>\n\n<p>函数式组件中使用方式2</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">React</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; inject, observer &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;mobx-react&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">App</span>(<span class=\"params\">props</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      &#123;</span></span><br><span class=\"line\"><span class=\"language-xml\">        props.store.list.map((item) =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"language-xml\">          return <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>&#123;item&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        &#125;)</span></span><br><span class=\"line\"><span class=\"language-xml\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">  )</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title function_\">inject</span>(<span class=\"string\">&#x27;store&#x27;</span>)(<span class=\"title function_\">observer</span>(<span class=\"title class_\">App</span>))</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"inject使用\"><a href=\"#inject使用\" class=\"headerlink\" title=\"inject使用\"></a>inject使用</h3><figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 顶层节点</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">Dict</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/mobx/dict&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">Provider</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;mobx-react&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 先使用高阶组件进行Provide</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">App</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Provider</span> <span class=\"attr\">Dict</span>=<span class=\"string\">&#123;Dict&#125;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">Router</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Router</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;/<span class=\"name\">Provider</span>&gt;</span></span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 使用inject对需要的组件进行注入使用</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">indexView</span> = (<span class=\"params\">props</span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> &#123; <span class=\"title class_\">Dict</span> &#125; = props</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title function_\">inject</span>(<span class=\"string\">&#x27;Dict&#x27;</span>)(<span class=\"title function_\">memo</span>(<span class=\"title function_\">observer</span>(indexView)))</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"inject引入多个mobx\"><a href=\"#inject引入多个mobx\" class=\"headerlink\" title=\"inject引入多个mobx\"></a>inject引入多个mobx</h3><p><strong>ProviderCom高阶组件</strong>（高阶组件引入后，其子集组件一样进行inject使用）</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">React</span>, &#123; <span class=\"variable constant_\">FC</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">Provider</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;mobx-react&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@description</span> Provider 高价组件</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> Child 需要包裹的组件</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> mobx mobx 实例对象，或者实例对象组成的数组</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"comment\">// ProviderCom 高阶组件</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"keyword\">function</span> <span class=\"title function_\">ProviderCom</span>(<span class=\"params\"></span></span><br><span class=\"line\"><span class=\"params\">\tChild: any,</span></span><br><span class=\"line\"><span class=\"params\">\tmobx: any</span></span><br><span class=\"line\"><span class=\"params\"></span>) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"function\">(<span class=\"params\">props: any</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> (</span><br><span class=\"line\">\t\t\t<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Provider</span> &#123;<span class=\"attr\">...mobx</span>&#125;&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">Child</span> &#123;<span class=\"attr\">...props</span>&#125; /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">Provider</span>&gt;</span></span></span><br><span class=\"line\">\t\t)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>结合ProvideCom注入引用多个mobx</strong></p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; inject, observer &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;mobx-react&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">StandardExamModal</span> = (<span class=\"params\">props</span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> &#123;</span><br><span class=\"line\">    <span class=\"title class_\">ModalMobx</span>,</span><br><span class=\"line\">    <span class=\"title class_\">Dict</span></span><br><span class=\"line\">  &#125; = props</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 注意写法</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title class_\">ProviderCom</span>(<span class=\"title function_\">inject</span>(<span class=\"string\">&#x27;ModalMobx&#x27;</span>, <span class=\"string\">&#x27;Dict&#x27;</span>)(<span class=\"title function_\">observer</span>(<span class=\"title class_\">StandardExamModal</span>)), &#123; <span class=\"title class_\">ModalMobx</span>, <span class=\"title class_\">Dict</span> &#125;)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"mobx6\"><a href=\"#mobx6\" class=\"headerlink\" title=\"mobx6\"></a>mobx6</h2><h3 id=\"添加观测的几种方式\"><a href=\"#添加观测的几种方式\" class=\"headerlink\" title=\"添加观测的几种方式\"></a>添加观测的几种方式</h3><h3 id=\"makeAutoObservable观测\"><a href=\"#makeAutoObservable观测\" class=\"headerlink\" title=\"makeAutoObservable观测\"></a>makeAutoObservable观测</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> axios <span class=\"keyword\">from</span> <span class=\"string\">&quot;axios&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; makeAutoObservable, runInAction &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;mobx&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 1.对应用状态进行建模。</span></span><br><span class=\"line\"><span class=\"comment\">// calss也可直接导出作为timer实例的类型来使用!!!</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Timer</span> &#123;</span><br><span class=\"line\">  secondsPassed = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">constructor</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 2.开启观测</span></span><br><span class=\"line\">    <span class=\"title function_\">makeAutoObservable</span>(<span class=\"variable language_\">this</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">increase</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">secondsPassed</span> += <span class=\"number\">1</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">reset</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">secondsPassed</span> = <span class=\"number\">0</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 异步</span></span><br><span class=\"line\">  <span class=\"keyword\">async</span> <span class=\"title function_\">decrement</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 1.</span></span><br><span class=\"line\">    axios.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;xxx&#x27;</span>).<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"title function_\">runInAction</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">secondsPassed</span> -= res</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 2.</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> res = <span class=\"keyword\">await</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 减的数为10</span></span><br><span class=\"line\">        <span class=\"title function_\">resolve</span>(<span class=\"number\">10</span>)</span><br><span class=\"line\">      &#125;, <span class=\"number\">1000</span>);</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"comment\">// 直接这样会报警告</span></span><br><span class=\"line\">    <span class=\"comment\">// this.secondsPassed -= res</span></span><br><span class=\"line\">    <span class=\"title function_\">runInAction</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">secondsPassed</span> -= res</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Timer</span>()</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"observer-使用-熟悉传值props法\"><a href=\"#observer-使用-熟悉传值props法\" class=\"headerlink\" title=\"observer()使用-熟悉传值props法\"></a>observer()使用-熟悉传值props法</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 使用</span></span><br><span class=\"line\"><span class=\"comment\">// 2.构建一个使用 observable 状态的“用户界面”。</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; observer &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;mobx-react&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; myTimer，<span class=\"title class_\">Timer</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./Timer&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">TimerView</span> = <span class=\"title function_\">memo</span>(<span class=\"title function_\">observer</span>(<span class=\"function\">(<span class=\"params\">&#123; timer &#125;: &#123; timer: Timer &#125;</span>) =&gt;</span> (</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>当前秒数：&#123;timer.secondsPassed&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;()</span> =&gt;</span> timer.reset()&#125;&gt;重置<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;/&gt;</span></span></span><br><span class=\"line\">)))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title class_\">TimerView</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 1.添加</span></span><br><span class=\"line\"><span class=\"title class_\">ReactDOM</span>.<span class=\"title function_\">render</span>(<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">TimerView</span> <span class=\"attr\">timer</span>=<span class=\"string\">&#123;myTimer&#125;</span> /&gt;</span></span>, <span class=\"variable language_\">document</span>.<span class=\"property\">body</span>)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"useLocalObservable实例使用法\"><a href=\"#useLocalObservable实例使用法\" class=\"headerlink\" title=\"useLocalObservable实例使用法\"></a>useLocalObservable实例使用法</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; observer, useLocalObservable &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;mobx-react&quot;</span>;</span><br><span class=\"line\"><span class=\"comment\">// 1.直接引入实例</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">TimeMobx</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./Timer&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">TimerView</span> = <span class=\"title function_\">observer</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 2.useLocalObservable直接使用mobx类导出的实例</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> timeStore = <span class=\"title function_\">useLocalObservable</span>(<span class=\"function\">() =&gt;</span> <span class=\"title class_\">TimeMobx</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> (<span class=\"language-xml\"><span class=\"tag\">&lt;&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>当前秒数：&#123;timeStore.secondsPassed&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;()</span> =&gt;</span> timeStore.reset()&#125;&gt;重置<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">  <span class=\"tag\">&lt;/&gt;</span></span>)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title class_\">TimerView</span></span><br></pre></td></tr></table></figure>\n\n\n\n"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2024-12-16T01:50:17.168Z","updated":"2024-12-16T01:49:39.902Z","comments":1,"layout":"post","photos":[],"_id":"cm4qsfufd0006pou2d4z3cz03","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","cover":false,"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cm4qsfuf40001pou27apfffv7","category_id":"cm4qsfufb0003pou21dvd9j7m","_id":"cm4qsfufc0005pou2165ye4in"}],"PostTag":[{"post_id":"cm4qsfuf40001pou27apfffv7","tag_id":"cm4qsfuf80002pou2d67s7afc","_id":"cm4qsfufc0004pou20awlbv8y"}],"Tag":[{"name":"mobx","_id":"cm4qsfuf80002pou2d67s7afc"}]}}